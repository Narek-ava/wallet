{
    "openapi": "3.0.0",
    "info": {
        "title": "Cratos testing annotations from bugreports",
        "description": "AUTHORIZATION<br><br>\r\n            We use the Bearer token for authentication.<br><br>\r\n            Bearer tokens enable requests to authenticate using an access key, such as a JSON Web Token (JWT). The token is a text string, included in the request header. In the Token field, enter your API key value. For added security, store it in a variable and reference the variable by name.\r\n            <br><br>Postman will append the token value to the text Bearer in the required format to the request Authorization header as follows:\r\n            <br><br> Bearer < Your API key > <br><br>\r\n            How to get a Bearer token:<br><br>\r\n            1. Send request to /api/login;<br><br>\r\n            2. Take token from response (e.g. 'accessToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ....');<br><br>\r\n            3. Use header Bearer token in your requests.<br><br>\r\n            Since the access token has a limited lifetime, we also give the refresh token, with the help of which you can get a new access token.  <br><br>",
        "version": "2.0.0"
    },
    "paths": {
        "/api/accounts/wire": {
            "get": {
                "tags": [
                    "004. Bank details"
                ],
                "summary": "Get all wire accounts",
                "description": "This API call is used to get all wire accounts",
                "operationId": "2d447dbb7a0caa94dbbfdf41c37c55ab",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Account Country code.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "bg"
                    },
                    {
                        "name": "accountType",
                        "in": "query",
                        "description": "account type is SWIFT = 0; SEPA = 1;",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "USD",
                                "EUR",
                                "GBP"
                            ]
                        },
                        "example": "USD"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accounts": {
                                            "properties": {
                                                "id": {
                                                    "description": "Id of account",
                                                    "type": "string"
                                                },
                                                "accountId": {
                                                    "description": "Number of account",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Account status",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Account name",
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Account currency",
                                                    "type": "string"
                                                },
                                                "wireDetails": {
                                                    "properties": {
                                                        "accountHolder": {
                                                            "description": "Holder of account",
                                                            "type": "string"
                                                        },
                                                        "accountNumber": {
                                                            "description": "Account number",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "Account type",
                                                            "type": "string"
                                                        },
                                                        "iban": {
                                                            "description": "IBAN",
                                                            "type": "string"
                                                        },
                                                        "swift": {
                                                            "description": "swift",
                                                            "type": "string"
                                                        },
                                                        "bankName": {
                                                            "description": "Name of bank",
                                                            "type": "string"
                                                        },
                                                        "bankAddress": {
                                                            "description": "Address of bank",
                                                            "type": "string"
                                                        },
                                                        "correspondentBank": {
                                                            "description": "Correspondent bank",
                                                            "type": "string"
                                                        },
                                                        "correspondentBankSwift": {
                                                            "description": "Correspondent bank swift",
                                                            "type": "string"
                                                        },
                                                        "intermediaryBank": {
                                                            "description": "Intermediary bank",
                                                            "type": "string"
                                                        },
                                                        "intermediaryBankSwift": {
                                                            "description": "Intermediary bank swift",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "balance": {
                                                    "description": "Wallet balance",
                                                    "type": "number"
                                                },
                                                "createdAt": {
                                                    "description": "Account creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Account update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "accounts": [
                                                {
                                                    "id": "s4a8s4a7-9948-5262-s45d-296b1b3588e1",
                                                    "accountId": 213,
                                                    "status": "Active",
                                                    "name": "Good Invest USD",
                                                    "currency": "USD",
                                                    "country": "bg",
                                                    "wireDetails": {
                                                        "accountHolder": "(your beneficiary account name)",
                                                        "accountNumber": "220148",
                                                        "beneficiaryAddress": "P.O. Box 283 42343 Road Rd. New York 87454",
                                                        "type": "SWIFT",
                                                        "iban": "SD47969000000123280738595",
                                                        "swift": "FE34343R43985",
                                                        "bankName": "Centric Bank",
                                                        "bankAddress": "4320 Linglestown Road, Harrisburg, PA 17112",
                                                        "correspondentBank": "CITIBANK N. A., NEW YORK",
                                                        "correspondentBankSwift": "CITIUS33",
                                                        "intermediaryBank": "",
                                                        "intermediaryBankSwift": ""
                                                    },
                                                    "balance": 1000,
                                                    "createdAt": "2021-09-14 18:38:04",
                                                    "updatedAt": "2022-02-07 15:29:07"
                                                },
                                                {
                                                    "id": "m4a8s4a7-9948-5262-s45d-296b1a3588e1",
                                                    "accountId": 214,
                                                    "status": "Active",
                                                    "name": "Good Invest USD",
                                                    "currency": "USD",
                                                    "country": "bg",
                                                    "wireDetails": {
                                                        "accountHolder": "(your beneficiary account name)",
                                                        "accountNumber": "220148",
                                                        "beneficiaryAddress": "P.O. Box 283 42343 Road Rd. New York 87454",
                                                        "type": "SWIFT",
                                                        "iban": "SD47969000000123280738595",
                                                        "swift": "FE34343R43985",
                                                        "bankName": "Centric Bank",
                                                        "bankAddress": "4320 Linglestown Road, Harrisburg, PA 17112",
                                                        "correspondentBank": "CITIBANK N. A., NEW YORK",
                                                        "correspondentBankSwift": "CITIUS33",
                                                        "intermediaryBank": "",
                                                        "intermediaryBankSwift": ""
                                                    },
                                                    "balance": 1000,
                                                    "createdAt": "2021-09-14 18:38:04",
                                                    "updatedAt": "2022-02-07 15:29:07"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Accounts not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "accounts": {
                                                    "description": "Accounts not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "accounts": "Accounts not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/accounts/crypto": {
            "get": {
                "tags": [
                    "003. Crypto wallets"
                ],
                "summary": "Get all external crypto accounts",
                "description": "This API call is used to get all external crypto accounts",
                "operationId": "409acd12b688caf01e8b0606aea7324c",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accounts": {
                                            "properties": {
                                                "id": {
                                                    "description": "Id of account",
                                                    "type": "string"
                                                },
                                                "accountId": {
                                                    "description": "Number of account",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Account status",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Account name",
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Account currency",
                                                    "type": "string"
                                                },
                                                "cryptoDetails": {
                                                    "properties": {
                                                        "label": {
                                                            "description": "Wallet name",
                                                            "type": "string"
                                                        },
                                                        "address": {
                                                            "description": "Wallet address",
                                                            "type": "string"
                                                        },
                                                        "verifiedAt": {
                                                            "description": "Crypto account verification date",
                                                            "type": "string"
                                                        },
                                                        "expiry": {
                                                            "description": "Crypto account expiry days",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "balance": {
                                                    "description": "Wallet balance",
                                                    "type": "number"
                                                },
                                                "createdAt": {
                                                    "description": "Account creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Account update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "accounts": [
                                                {
                                                    "id": "s4a8s4a7-4848-5262-s45d-296b1bd288e1",
                                                    "accountId": 315,
                                                    "status": "Active",
                                                    "name": "Good Invest BCH",
                                                    "currency": "BCH",
                                                    "country": "bg",
                                                    "cryptoDetails": {
                                                        "label": "Hoper Invest BCH",
                                                        "address": "4Aty6cyHl2spu5OifAHtV6cQTUWdeqhmg4",
                                                        "verifiedAt": "2021-09-14 18:40:00",
                                                        "expiry": "25 days"
                                                    },
                                                    "balance": 0,
                                                    "createdAt": "2021-09-14 18:38:04",
                                                    "updatedAt": "2022-02-07 15:29:07"
                                                },
                                                {
                                                    "id": "s4a8s4a7-4848-5262-s45d-296b1bd288e1",
                                                    "accountId": 315,
                                                    "status": "Active",
                                                    "name": "Good Invest BCH",
                                                    "currency": "BCH",
                                                    "country": "bg",
                                                    "cryptoDetails": {
                                                        "label": "Hoper Invest BCH",
                                                        "address": "4Aty6cyHl2spu5OifAHtV6cQTUWdeqhmg4",
                                                        "verifiedAt": "2021-09-14 18:40:00",
                                                        "expiry": "21 days"
                                                    },
                                                    "balance": 0,
                                                    "createdAt": "2021-09-14 18:38:04",
                                                    "updatedAt": "2022-02-07 15:29:07"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Accounts not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "accounts": {
                                                    "description": "Accounts not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "accounts": "Accounts not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/account/wire": {
            "put": {
                "tags": [
                    "004. Bank details"
                ],
                "summary": "Update wire account",
                "description": "This API call is used to update the account.",
                "operationId": "e8f6f715d129f291a96465cbccf3641b",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "u_account_id",
                                    "u_template_name",
                                    "u_country",
                                    "u_currency",
                                    "u_type",
                                    "u_swift",
                                    "u_account_holder",
                                    "u_account_number",
                                    "u_bank_name",
                                    "u_bank_address"
                                ],
                                "properties": {
                                    "u_account_id": {
                                        "description": "Wire account id",
                                        "type": "string",
                                        "example": "s4a8s4a7-9948-5262-s45d-296b1b3588e1"
                                    },
                                    "u_template_name": {
                                        "description": "Bank template name",
                                        "type": "string",
                                        "example": "Good Invest USD"
                                    },
                                    "u_country": {
                                        "description": "Account country code",
                                        "type": "string",
                                        "example": "bg"
                                    },
                                    "u_currency": {
                                        "description": "Account currency",
                                        "type": "string",
                                        "enum": [
                                            "USD",
                                            "EUR",
                                            "GBP"
                                        ],
                                        "example": "USD"
                                    },
                                    "u_type": {
                                        "description": "Account type. SEPA = 1 , SWIFT = 0",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "u_iban": {
                                        "description": "iban (required when type is swift)",
                                        "type": "string",
                                        "example": "SD47969000000123280738595"
                                    },
                                    "u_swift": {
                                        "description": "Swift",
                                        "type": "string",
                                        "example": "FE34343R43985"
                                    },
                                    "u_account_holder": {
                                        "description": "Account holder",
                                        "type": "string",
                                        "example": "(your beneficiary account name)"
                                    },
                                    "u_account_number": {
                                        "description": "Account number",
                                        "type": "string",
                                        "example": "220148"
                                    },
                                    "u_bank_name": {
                                        "description": "Bank name",
                                        "type": "string",
                                        "example": "Centric Bank"
                                    },
                                    "u_bank_address": {
                                        "description": "Bank address",
                                        "type": "string",
                                        "example": "4320 Linglestown Road, Harrisburg, PA 17112"
                                    },
                                    "u_correspondent_bank": {
                                        "description": "Correspondent bank. For SWIFT accounts",
                                        "type": "string"
                                    },
                                    "u_correspondent_bank_swift": {
                                        "description": "Correspondent bank SWIFT. For SWIFT accounts",
                                        "type": "string"
                                    },
                                    "u_intermediary_bank": {
                                        "description": "Intermediary bank. For SWIFT accounts",
                                        "type": "string"
                                    },
                                    "u_intermediary_bank_swift": {
                                        "description": "Intermediary bank SWIFT. For SWIFT accounts",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Id of account",
                                            "type": "string"
                                        },
                                        "accountId": {
                                            "description": "Number of account",
                                            "type": "integer"
                                        },
                                        "status": {
                                            "description": "Account status",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Account name",
                                            "type": "string"
                                        },
                                        "currency": {
                                            "description": "Account currency",
                                            "type": "string"
                                        },
                                        "wireDetails": {
                                            "properties": {
                                                "accountHolder": {
                                                    "description": "Holder of account",
                                                    "type": "string"
                                                },
                                                "accountNumber": {
                                                    "description": "Account number",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "Account type",
                                                    "type": "string"
                                                },
                                                "iban": {
                                                    "description": "IBAN",
                                                    "type": "string"
                                                },
                                                "swift": {
                                                    "description": "swift",
                                                    "type": "string"
                                                },
                                                "bankName": {
                                                    "description": "Name of bank",
                                                    "type": "string"
                                                },
                                                "bankAddress": {
                                                    "description": "Address of bank",
                                                    "type": "string"
                                                },
                                                "correspondentBank": {
                                                    "description": "Correspondent bank",
                                                    "type": "string"
                                                },
                                                "correspondentBankSwift": {
                                                    "description": "Correspondent bank swift",
                                                    "type": "string"
                                                },
                                                "intermediaryBank": {
                                                    "description": "Intermediary bank",
                                                    "type": "string"
                                                },
                                                "intermediaryBankSwift": {
                                                    "description": "Intermediary bank swift",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "balance": {
                                            "description": "Wallet balance",
                                            "type": "number"
                                        },
                                        "createdAt": {
                                            "description": "Account creation date",
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "description": "Account update date",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "id": "s4a8s4a7-9948-5262-s45d-296b1b3588e1",
                                            "accountId": 213,
                                            "status": "Active",
                                            "name": "Good Invest USD",
                                            "currency": "USD",
                                            "country": "bg",
                                            "wireDetails": {
                                                "accountHolder": "(your beneficiary account name)",
                                                "accountNumber": "220148",
                                                "beneficiaryAddress": "P.O. Box 283 42343 Road Rd. New York 87454",
                                                "type": "Swift",
                                                "iban": "SD47969000000123280738595",
                                                "swift": "FE34343R43985",
                                                "bankName": "Centric Bank",
                                                "bankAddress": "4320 Linglestown Road, Harrisburg, PA 17112",
                                                "correspondentBank": "CITIBANK N. A., NEW YORK",
                                                "correspondentBankSwift": "CITIUS33",
                                                "intermediaryBank": "",
                                                "intermediaryBankSwift": ""
                                            },
                                            "balance": 100,
                                            "createdAt": "2021-09-14 18:38:04",
                                            "updatedAt": "2022-02-07 15:29:07"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "u_account_id": {
                                                    "description": "Account not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "u_account_id": "Account not found."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "004. Bank details"
                ],
                "summary": "Create wire account",
                "description": "This API call is used to create a new wire account. ",
                "operationId": "40dd068b8264fc01cfb2cde912c19b85",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "template_name",
                                    "bank_address",
                                    "bank_name",
                                    "country",
                                    "currency",
                                    "type",
                                    "swift",
                                    "account_holder",
                                    "account_number"
                                ],
                                "properties": {
                                    "template_name": {
                                        "description": "Bank template name",
                                        "type": "string",
                                        "example": "Good Invest USD"
                                    },
                                    "country": {
                                        "description": "Account country code",
                                        "type": "string",
                                        "example": "bg"
                                    },
                                    "currency": {
                                        "description": "Account currency",
                                        "type": "string",
                                        "enum": [
                                            "USD",
                                            "EUR",
                                            "GBP"
                                        ],
                                        "example": "USD"
                                    },
                                    "type": {
                                        "description": "Account type. SEPA = 1 , SWIFT = 0",
                                        "type": "integer",
                                        "default": 1,
                                        "enum": [
                                            0,
                                            1
                                        ]
                                    },
                                    "iban": {
                                        "description": "iban (required when type is SWIFT)",
                                        "type": "string",
                                        "example": "SD47969000000123280738595"
                                    },
                                    "swift": {
                                        "description": "Swift",
                                        "type": "string",
                                        "example": "FE34343R43985"
                                    },
                                    "account_holder": {
                                        "description": "Account holder",
                                        "type": "string",
                                        "example": "(your beneficiary account name)"
                                    },
                                    "account_number": {
                                        "description": "Account number",
                                        "type": "string",
                                        "example": "220148"
                                    },
                                    "bank_name": {
                                        "description": "Bank name",
                                        "type": "string",
                                        "example": "Centric Bank"
                                    },
                                    "bank_address": {
                                        "description": "Bank address",
                                        "type": "string",
                                        "example": "4320 Linglestown Road, Harrisburg, PA 17112"
                                    },
                                    "correspondent_bank": {
                                        "description": "Correspondent bank. For SWIFT accounts",
                                        "type": "string"
                                    },
                                    "correspondent_bank_swift": {
                                        "description": "Correspondent bank SWIFT. For SWIFT accounts",
                                        "type": "string"
                                    },
                                    "intermediary_bank": {
                                        "description": "Intermediary bank. For SWIFT accounts",
                                        "type": "string"
                                    },
                                    "intermediary_bank_swift": {
                                        "description": "Intermediary bank SWIFT. For SWIFT accounts",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Id of account",
                                            "type": "string"
                                        },
                                        "accountId": {
                                            "description": "Number of account",
                                            "type": "integer"
                                        },
                                        "status": {
                                            "description": "Account status",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Account name",
                                            "type": "string"
                                        },
                                        "currency": {
                                            "description": "Account currency",
                                            "type": "string"
                                        },
                                        "wireDetails": {
                                            "properties": {
                                                "accountHolder": {
                                                    "description": "Holder of account",
                                                    "type": "string"
                                                },
                                                "accountNumber": {
                                                    "description": "Account number",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "Account type",
                                                    "type": "string"
                                                },
                                                "iban": {
                                                    "description": "IBAN",
                                                    "type": "string"
                                                },
                                                "swift": {
                                                    "description": "swift",
                                                    "type": "string"
                                                },
                                                "bankName": {
                                                    "description": "Name of bank",
                                                    "type": "string"
                                                },
                                                "bankAddress": {
                                                    "description": "Address of bank",
                                                    "type": "string"
                                                },
                                                "correspondentBank": {
                                                    "description": "Correspondent bank",
                                                    "type": "string"
                                                },
                                                "correspondentBankSwift": {
                                                    "description": "Correspondent bank swift",
                                                    "type": "string"
                                                },
                                                "intermediaryBank": {
                                                    "description": "Intermediary bank",
                                                    "type": "string"
                                                },
                                                "intermediaryBankSwift": {
                                                    "description": "Intermediary bank swift",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "balance": {
                                            "description": "Wallet balance",
                                            "type": "number"
                                        },
                                        "createdAt": {
                                            "description": "Account creation date",
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "description": "Account update date",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "id": "s4a8s4a7-9948-5262-s45d-296b1b3588e1",
                                            "accountId": 213,
                                            "status": "Active",
                                            "name": "Good Invest USD",
                                            "currency": "USD",
                                            "country": "bg",
                                            "wireDetails": {
                                                "accountHolder": "(your beneficiary account name)",
                                                "accountNumber": "220148",
                                                "beneficiaryAddress": "P.O. Box 283 42343 Road Rd. New York 87454",
                                                "type": "Swift",
                                                "iban": "SD47969000000123280738595",
                                                "swift": "FE34343R43985",
                                                "bankName": "Centric Bank",
                                                "bankAddress": "4320 Linglestown Road, Harrisburg, PA 17112",
                                                "correspondentBank": "CITIBANK N. A., NEW YORK",
                                                "correspondentBankSwift": "CITIUS33",
                                                "intermediaryBank": "",
                                                "intermediaryBankSwift": ""
                                            },
                                            "balance": 100,
                                            "createdAt": "2021-09-14 18:38:04",
                                            "updatedAt": "2022-02-07 15:29:07"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Account is not created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "currency": {
                                                    "description": "Currency is required",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "currency": "Currency is required."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "004. Bank details"
                ],
                "summary": "Delete wire account",
                "description": "This API call is used to delete a new wire account",
                "operationId": "6d8f885297ee957ed6789d6cee7281b2",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "account_id"
                                ],
                                "properties": {
                                    "account_id": {
                                        "description": "Wire account id",
                                        "type": "string",
                                        "example": "s4a8s4a7-9948-5262-s45d-296b1b3588e1c"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "If account was successfully deleted",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "account_id": {
                                                    "description": "Account not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "account_id": "Account not found."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/account/crypto": {
            "post": {
                "tags": [
                    "003. Crypto wallets"
                ],
                "summary": "Create external crypto account",
                "description": "This API call is used to create a new external crypto account. ",
                "operationId": "424179bd3d9553b956b5add4cd1d0c57",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "wallet_address",
                                    "crypto_currency"
                                ],
                                "properties": {
                                    "wallet_address": {
                                        "description": "Wallet address",
                                        "type": "string",
                                        "example": "NAaDxD4LU8Q9h6dMjaeiFJy68pz7Vm1UxM"
                                    },
                                    "crypto_currency": {
                                        "description": "Crypto Currency",
                                        "type": "string",
                                        "enum": [
                                            "BTC",
                                            "LTC",
                                            "BCH"
                                        ],
                                        "example": "LTC"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accounts": {
                                            "properties": {
                                                "id": {
                                                    "description": "Id of account",
                                                    "type": "string"
                                                },
                                                "accountId": {
                                                    "description": "Number of account",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Account status",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Account name",
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Account currency",
                                                    "type": "string"
                                                },
                                                "cryptoDetails": {
                                                    "properties": {
                                                        "label": {
                                                            "description": "Wallet name",
                                                            "type": "string"
                                                        },
                                                        "address": {
                                                            "description": "Wallet address",
                                                            "type": "string"
                                                        },
                                                        "verifiedAt": {
                                                            "description": "Crypto account verification date",
                                                            "type": "string"
                                                        },
                                                        "expiry": {
                                                            "description": "Crypto account expiry days",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "balance": {
                                                    "description": "Wallet balance",
                                                    "type": "number"
                                                },
                                                "createdAt": {
                                                    "description": "Account creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Account update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "account": {
                                                "id": "s4a8s4a7-4848-5262-s45d-296b1bd288e1",
                                                "accountId": 315,
                                                "status": "Active",
                                                "name": "Good Invest BCH",
                                                "currency": "BCH",
                                                "country": "bg",
                                                "cryptoDetails": {
                                                    "label": "Hoper Invest BCH",
                                                    "address": "4Aty6cyHl2spu5OifAHtV6cQTUWdeqhmg4",
                                                    "verifiedAt": "2021-09-14 18:38:04",
                                                    "expiry": "21 days"
                                                },
                                                "balance": 0,
                                                "createdAt": "2021-09-14 18:38:04",
                                                "updatedAt": "2022-02-07 15:29:07"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Account not created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "wallet_address": {
                                                    "description": "Not supported wallet address",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "wallet_address": "Not supported wallet address."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rates": {
            "get": {
                "tags": [
                    "005. Compliance"
                ],
                "summary": "Get rates",
                "description": "This api call is used to get rates",
                "operationId": "37e043f57c356eb5643e727eb5c4f554",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rate was found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "commissions": {
                                            "properties": {
                                                "USD": {
                                                    "properties": {
                                                        "incomingFeeSepa": {
                                                            "description": "Incoming fee(%) for Top Up/Withdraw Sepa (USD)",
                                                            "type": "number"
                                                        },
                                                        "outgoingFeeSepa": {
                                                            "description": "Outgoing fee for Top Up/Withdraw Sepa",
                                                            "type": "number"
                                                        },
                                                        "incomingFeeSwift": {
                                                            "description": "Incoming fee for Top Up/Withdraw Swift",
                                                            "type": "number"
                                                        },
                                                        "outgoingFeeSwift": {
                                                            "description": "Outgoing fee for Top Up/Withdraw Swift",
                                                            "type": "number"
                                                        },
                                                        "bankCard": {
                                                            "description": "Fee for Card Payment",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "LTC": {
                                                    "properties": {
                                                        "incomingFeeCrypto": {
                                                            "description": "Incoming fee(%) for Top Up/Withdraw Crypto",
                                                            "type": "number"
                                                        },
                                                        "outgoingFeeCrypto": {
                                                            "description": "Outgoing fee for Top Up/Withdraw Crypto",
                                                            "type": "number"
                                                        },
                                                        "incomingFeeBlockchain": {
                                                            "description": "Withdraw Blockchain Fee",
                                                            "type": "number"
                                                        },
                                                        "outgoingFeeBlockchain": {
                                                            "description": "Withdraw Blockchain Fee",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "limits": {
                                                "level": 1,
                                                "transactionLimit": 1000,
                                                "monthlyLimit": 5000,
                                                "availableMonthlyAmount": 4500
                                            },
                                            "commissions": {
                                                "Fiat": [
                                                    {
                                                        "Currency": "USD",
                                                        "incomingFeeSepa": 1.2,
                                                        "outgoingFeeSepa": 1.2,
                                                        "incomingFeeSwift": 1.5,
                                                        "outgoingFeeSwift": 1.5,
                                                        "bankCard": 0
                                                    },
                                                    {
                                                        "Currency": "EUR",
                                                        "incomingFeeSepa": 3,
                                                        "outgoingFeeSepa": 1.7,
                                                        "incomingFeeSwift": 0,
                                                        "outgoingFeeSwift": 0,
                                                        "bankCard": 0
                                                    },
                                                    {
                                                        "Currency": "GBP",
                                                        "incomingFeeSepa": 0,
                                                        "outgoingFeeSepa": 0,
                                                        "incomingFeeSwift": 0,
                                                        "outgoingFeeSwift": 0,
                                                        "bankCard": 0
                                                    }
                                                ],
                                                "Crypto": [
                                                    {
                                                        "Currency": "BTC",
                                                        "incomingFeeCrypto": 0,
                                                        "outgoingFeeCrypto": 1,
                                                        "incomingFeeBlockchain": 0.0001,
                                                        "outgoingFeeBlockchain": 0.0001
                                                    },
                                                    {
                                                        "Currency": "LTC",
                                                        "incomingFeeCrypto": 0,
                                                        "outgoingFeeCrypto": 1,
                                                        "incomingFeeBlockchain": 0.0001,
                                                        "outgoingFeeBlockchain": 0.0001
                                                    },
                                                    {
                                                        "Currency": "BCH",
                                                        "incomingFeeCrypto": 0,
                                                        "outgoingFeeCrypto": 1,
                                                        "incomingFeeBlockchain": 0.0001,
                                                        "outgoingFeeBlockchain": 0.0001
                                                    }
                                                ]
                                            },
                                            "accountMinAmounts": {
                                                "Fiat": [
                                                    {
                                                        "Currency": "USD",
                                                        "withdrawSepa": 10,
                                                        "topUpSepa": 10,
                                                        "withdrawSwift": 1000,
                                                        "topUpSwift": 1000,
                                                        "topUpBankCard": 0
                                                    },
                                                    {
                                                        "Currency": "EUR",
                                                        "withdrawSepa": 50,
                                                        "topUpSepa": 50,
                                                        "withdrawSwift": 0,
                                                        "topUpSwift": 0,
                                                        "topUpBankCard": 0
                                                    },
                                                    {
                                                        "Currency": "GBP",
                                                        "withdrawSepa": 0,
                                                        "topUpSepa": 0,
                                                        "withdrawSwift": 0,
                                                        "topUpSwift": 0,
                                                        "topUpBankCard": 0
                                                    }
                                                ],
                                                "Crypto": [
                                                    {
                                                        "Currency": "BTC",
                                                        "withdrawCrypto": 0.01
                                                    },
                                                    {
                                                        "Currency": "LTC",
                                                        "withdrawCrypto": 0.01
                                                    },
                                                    {
                                                        "Currency": "BCH",
                                                        "withdrawCrypto": 0.01
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rates not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "rates": {
                                                    "description": "Rates not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "rates": "Rates not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/compliance": {
            "get": {
                "tags": [
                    "005. Compliance"
                ],
                "summary": "Get compliance data",
                "description": "This api call is used to get compliance data",
                "operationId": "c429f481a9ecf11237d816944c6338cb",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Compliance data found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "complianceData": {
                                            "properties": {
                                                "level": {
                                                    "description": "Current compliance level.",
                                                    "type": "integer"
                                                },
                                                "nextLevelName": {
                                                    "description": "Next compliance level name.",
                                                    "type": "string"
                                                },
                                                "nextLevelType": {
                                                    "description": "Can be Update or Retry.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "complianceData": {
                                                "level": 1,
                                                "nextLevelName": "Level 2",
                                                "nextLevelType": "Update"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/compliance/get/token": {
            "get": {
                "tags": [
                    "005. Compliance"
                ],
                "summary": "Get url for compliance level update",
                "description": "This api call is used to get url for compliance level update",
                "operationId": "03baaed921d29fb320aa748d4f408c89",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "url": {
                                            "description": "Compliance start url.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "url": "https://app.cratos.net/compliance/change/olCXAGn7yiTgcx9P4bc7834e366bab19419fce8070bf3a7c"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile/update": {
            "patch": {
                "tags": [
                    "007. User profile settings"
                ],
                "summary": "Update user profile",
                "description": "This API call is used to update user profile information.",
                "operationId": "2e00e097a1cedd4a2ebb3580f6fd064d",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "first_name",
                                    "last_name",
                                    "country",
                                    "city",
                                    "citizenship",
                                    "zip_code",
                                    "address",
                                    "date_of_birth",
                                    "gender",
                                    "passport"
                                ],
                                "properties": {
                                    "phone": {
                                        "description": "User phone",
                                        "type": "string",
                                        "example": "19065554433"
                                    },
                                    "first_name": {
                                        "description": "User first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "User last name",
                                        "type": "string",
                                        "example": "Johnson"
                                    },
                                    "country": {
                                        "description": "User country code",
                                        "type": "string",
                                        "example": "us"
                                    },
                                    "city": {
                                        "description": "User city",
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "citizenship": {
                                        "description": "User citizenship",
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "zip_code": {
                                        "description": "User zip code",
                                        "type": "string",
                                        "example": "0001"
                                    },
                                    "address": {
                                        "description": "User address",
                                        "type": "string",
                                        "example": "7022 Pierce Ave"
                                    },
                                    "date_of_birth": {
                                        "description": "User birthday",
                                        "type": "string",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "description": "Gender. Male=1; Female=2",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "passport": {
                                        "description": "ID/Passport number",
                                        "type": "string",
                                        "example": "AD0102030405"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Incorrect client type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message.",
                                            "properties": {
                                                "incorrect_user_type": {
                                                    "description": "Incorrect client type.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "incorrect_user_type": "Incorrect client type."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Personal information update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Personal information updated successfully.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "Personal information updated successfully."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/corporate/profile/update": {
            "patch": {
                "tags": [
                    "007. User profile settings"
                ],
                "summary": "Update corporate user profile",
                "description": "This API call is used to update corporate user profile information.",
                "operationId": "da443aef4129b94e58626d69c176a389",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "company_email",
                                    "company_name",
                                    "company_phone",
                                    "contact_phone",
                                    "registration_number",
                                    "country",
                                    "legal_address",
                                    "trading_address",
                                    "beneficial_owner",
                                    "contact_email",
                                    "ceos",
                                    "shareholders",
                                    "interface_language",
                                    "registration_date"
                                ],
                                "properties": {
                                    "company_email": {
                                        "description": "Company email",
                                        "type": "string",
                                        "example": "company_email@cratos.com"
                                    },
                                    "company_name": {
                                        "description": "Company name",
                                        "type": "string",
                                        "example": "Company"
                                    },
                                    "company_phone": {
                                        "description": "Company phone",
                                        "type": "string",
                                        "example": "15555555"
                                    },
                                    "contact_phone": {
                                        "description": "Contact phone",
                                        "type": "string",
                                        "example": "19065554433"
                                    },
                                    "registration_number": {
                                        "description": "Registration number",
                                        "type": "string",
                                        "example": "2345345324"
                                    },
                                    "country": {
                                        "description": "User country code",
                                        "type": "string",
                                        "example": "us"
                                    },
                                    "legal_address": {
                                        "description": "Legal address",
                                        "type": "string",
                                        "example": "P.O. Box 283 8562 Fusce Rd. Frederick Nebraska"
                                    },
                                    "trading_address": {
                                        "description": "Trading address",
                                        "type": "string",
                                        "example": "P.O. Box 283 8562 Fusce Rd. Frederick Nebraska"
                                    },
                                    "contact_email": {
                                        "description": "Contact email",
                                        "type": "string",
                                        "example": "contact_email@cratos.com"
                                    },
                                    "beneficial_owners": {
                                        "description": "Beneficial owner's names",
                                        "type": "object",
                                        "example": [
                                            "Mavrodia Sergey",
                                            "Garrett Darby",
                                            "Andrea Lindner"
                                        ]
                                    },
                                    "ceos": {
                                        "description": "Ceo's full names",
                                        "type": "object",
                                        "example": [
                                            "Mavrodia Sergey",
                                            "Garrett Darby",
                                            "Andrea Lindner"
                                        ]
                                    },
                                    "shareholders": {
                                        "description": "Shareholders",
                                        "type": "object",
                                        "example": [
                                            "Samira Piper",
                                            "Ivy Hawes",
                                            "Arthur Millington"
                                        ]
                                    },
                                    "interface_language": {
                                        "description": "Interface language country code",
                                        "type": "string",
                                        "example": "us"
                                    },
                                    "registration_date": {
                                        "description": "Registration date",
                                        "type": "string",
                                        "example": "2020-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Incorrect client type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "incorrect_user_type": {
                                                    "description": "Incorrect client type.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "incorrect_user_type": "Incorrect client type."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Personal information updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Thank you. We will review the changes and update your account information.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "Thank you. We will review the changes and update your account information."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password/update": {
            "patch": {
                "tags": [
                    "007. User profile settings"
                ],
                "summary": "User password update",
                "description": "This API call is used to update user password.",
                "operationId": "b216e0385e290c7d933949bf316f5ab5",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "password",
                                    "password_confirmation",
                                    "old_password"
                                ],
                                "properties": {
                                    "password": {
                                        "description": "New password",
                                        "type": "string",
                                        "example": "new_secret"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "example": "new_secret"
                                    },
                                    "old_password": {
                                        "description": "Old password",
                                        "type": "string",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Change password.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Change password.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "Your password has been changed successfully."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Password updated errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Updated errors",
                                            "properties": {
                                                "password": {
                                                    "description": "New password",
                                                    "type": "string"
                                                },
                                                "password_confirmation": {
                                                    "description": "Confirmation password",
                                                    "type": "string"
                                                },
                                                "old_password": {
                                                    "description": "Old password",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "password": "The password confirmation does not match.",
                                            "password_confirmation": "Password must be minimum 8 characters long, contain digits, capital letters and symbols such as $#@!%^&*(),.+-/*",
                                            "old_password": "The current password is incorrect."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/email/update": {
            "patch": {
                "tags": [
                    "007. User profile settings"
                ],
                "summary": "User email update",
                "description": "This API call is used to update user email. An email is sent to the user for confirmation.",
                "operationId": "31fc971cac3ac3ba55457e4a1fa6d85c",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "email_confirmation",
                                    "old_email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "New email",
                                        "type": "string",
                                        "example": "new_email@cratos.com"
                                    },
                                    "email_confirmation": {
                                        "description": "Email confirmation",
                                        "type": "string",
                                        "example": "new_email@cratos.com"
                                    },
                                    "old_email": {
                                        "description": "Old email",
                                        "type": "string",
                                        "example": "email@cratos.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sent verification email.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Sent verification email.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "An email has been sent to you for confirmation."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Email updated errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Updated errors",
                                            "properties": {
                                                "email": {
                                                    "description": "New email",
                                                    "type": "string"
                                                },
                                                "email_confirmation": {
                                                    "description": "Confirmation email",
                                                    "type": "string"
                                                },
                                                "old_email": {
                                                    "description": "Old email",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "email": "The email confirmation does not match.",
                                            "email_confirmation": "The email confirmation must be a valid email address.",
                                            "old_email": "Invalid email address."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile/info": {
            "get": {
                "tags": [
                    "007. User profile settings"
                ],
                "summary": "Get user profile information",
                "description": "This API call is used to get user profile information",
                "operationId": "d6b4d55680deb6f4a7ca6b987cf6f451",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "companyName": {
                                                    "description": "Company name",
                                                    "type": "string"
                                                },
                                                "companyEmail": {
                                                    "description": "Company email",
                                                    "type": "string"
                                                },
                                                "companyPhone": {
                                                    "description": "Company phone",
                                                    "type": "string"
                                                },
                                                "registrationDate": {
                                                    "description": "Company registration date",
                                                    "type": "string"
                                                },
                                                "legalForm": {
                                                    "description": "Company legal form",
                                                    "type": "string"
                                                },
                                                "registrationNumber": {
                                                    "description": "Company registration number",
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "description": "Company country",
                                                    "type": "string"
                                                },
                                                "legalAddress": {
                                                    "description": "Company legal address",
                                                    "type": "string"
                                                },
                                                "tradingAddress": {
                                                    "description": "Company trading address",
                                                    "type": "string"
                                                },
                                                "ceosNames": {
                                                    "description": "Names of company ceos.",
                                                    "type": "object"
                                                },
                                                "beneficialOwners": {
                                                    "description": "Names of company beneficial owners.",
                                                    "type": "object"
                                                },
                                                "shareholders": {
                                                    "description": "Names of company shareholders.",
                                                    "type": "object"
                                                },
                                                "contactEmail": {
                                                    "description": "Company contact email",
                                                    "type": "string"
                                                },
                                                "interfaceLanguage": {
                                                    "description": "Application interface language",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "description": "Login email",
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "description": "Registration phone",
                                                    "type": "string"
                                                },
                                                "twoFactorAuthentication": {
                                                    "description": "Two factor authentication type",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "Profile status ( New, Pending Verification, Ready for Compliance, Active, Banned, Suspended)",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "firstName": {
                                                    "description": "User first name",
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "description": "User first name",
                                                    "type": "string"
                                                },
                                                "dateOfBirth": {
                                                    "description": "User date of birth",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "description": "User email",
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "description": "User phone",
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "description": "User country code",
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "description": "User city",
                                                    "type": "string"
                                                },
                                                "citizenship": {
                                                    "description": "User citizenship",
                                                    "type": "string"
                                                },
                                                "zipCode": {
                                                    "description": "User zipCode",
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "description": "User address",
                                                    "type": "string"
                                                },
                                                "twoFactorAuthentication": {
                                                    "description": "Two factor authentication type",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "Profile status ( New, Pending Verification, Ready for Compliance, Active, Banned, Suspended)",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                },
                                "examples": {
                                    "corporate": {
                                        "summary": "An result corporate user.",
                                        "value": {
                                            "companyName": "Google",
                                            "companyEmail": "info@gmail.com",
                                            "companyPhone": "10000000000",
                                            "registrationDate": "2020-01-01",
                                            "legalForm": "Limited Liability Partnership (LLP)",
                                            "registrationNumber": "10000000000",
                                            "country": "Bulgaria",
                                            "industryType": "Construction",
                                            "legalAddress": "P.O. Box 000 00 1825 Broadcast Drive",
                                            "tradingAddress": "P.O. Box 000 00 1825 Broadcast Drive",
                                            "ceosNames": [
                                                "John Smith J.",
                                                "Max Snow K."
                                            ],
                                            "beneficialOwners": [
                                                "John Smith",
                                                "Max Snow"
                                            ],
                                            "shareholders": [
                                                "John Smith S.",
                                                "Max Snow M."
                                            ],
                                            "contactEmail": "info@gmail.com",
                                            "interfaceLanguage": "us",
                                            "email": "info@google.com",
                                            "phone": "19154567889",
                                            "twoFactorAuthentication": "Google",
                                            "status": "Active"
                                        }
                                    },
                                    "individual": {
                                        "summary": "An result individual user.",
                                        "value": {
                                            "firstName": "John",
                                            "lastName": "Smith",
                                            "dateOfBirth": "1990-01-01",
                                            "email": "info@google.com",
                                            "phone": "10000000000",
                                            "country": "Armenia",
                                            "city": "Yerevan",
                                            "citizenship": "Armenia",
                                            "zipCode": "0000",
                                            "address": "Street 00",
                                            "twoFactorAuthentication": "None",
                                            "status": "Active"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/2fa/google/enable": {
            "get": {
                "tags": [
                    "017. Two-factor authentication"
                ],
                "summary": "Enable Google 2FA authentication",
                "description": "This API call is used to enable Google 2FA authentication. After must call /2fa/google/enable/confirm endpoint for finishin enable 2FA. The user should not have any other authentication connected, if has, at first  disconnect them.",
                "operationId": "4cf7f9f583322f38670d95a07cd456a9",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "error": {
                                                    "description": "Already enabled 2FA authentication.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "2fa_error": "Already enabled Google two-factor authentication. /Already enabled other type two-factor authentication. At first disable that one, than enable Google."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successful enable Google 2FA authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Successfully enable Google 2FA authentication",
                                            "type": "boolean"
                                        },
                                        "qrImage": {
                                            "description": "Google 2FA authentication QR image",
                                            "type": "string"
                                        },
                                        "secret": {
                                            "description": "Google 2FA authentication secret key",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "success": "true",
                                        "secret": "secret",
                                        "qrImage": "svg"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/2fa/email/enable": {
            "get": {
                "tags": [
                    "017. Two-factor authentication"
                ],
                "summary": "Enable Email 2FA authentication",
                "description": "This API call is used to enable Email 2FA authentication. After must call /2fa/email/enable/confirm endpoint for finishin enable 2FA. The user should not have any other authentication connected, if has, at first  disconnect them.",
                "operationId": "58d19f8e567e9a47a2e06944b0965bd8",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "2fa_error": {
                                                    "description": "Already enabled 2FA authentication.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "2fa_error": "Already enabled Email two-factor authentication. /Already enabled other type two-factor authentication. At first disable that one, than enable Email."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successful enable Email 2FA authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Successfully enable Email 2FA authentication",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Sent verification email",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "success": "true",
                                        "message": "Code was sent to your email."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/2fa/google/enable/confirm": {
            "post": {
                "tags": [
                    "017. Two-factor authentication"
                ],
                "summary": "Confirm Google two factor authentication with verification code after enable 2fa",
                "description": "This API call is used when user  enabled Google two-factor authentication and must confirm with a verification code.",
                "operationId": "28c36aa774bb64aea30224215f86620c",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Verification code. Client get it from Google authenticator application.",
                                        "type": "string",
                                        "example": "000000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Failed to verify code",
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "error_2fa_wrong_code": {
                                                    "description": "Invalid code",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "false",
                                            "errors": {
                                                "error_2fa_wrong_code": "Invalid code."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully confirm",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Confirm verification code",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "true"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/2fa/email/enable/confirm": {
            "post": {
                "tags": [
                    "017. Two-factor authentication"
                ],
                "summary": "Confirm Email two factor authentication with verification code after enable 2fa",
                "description": "This API call is used when user  enabled Email two-factor authentication and must confirm with a verification code.",
                "operationId": "e22500664da48603542835dddb224f51",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Verification code. The code is sent to the client's email.",
                                        "type": "string",
                                        "example": "000000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Failed to verify code",
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "error_2fa_wrong_code": {
                                                    "description": "Invalid code",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "false",
                                            "errors": {
                                                "error_2fa_wrong_code": "Invalid code."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully confirm",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Confirm verification code",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "true"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/2fa/google/disable": {
            "post": {
                "tags": [
                    "017. Two-factor authentication"
                ],
                "summary": "Disable Google two factor authentication.",
                "description": "This API call is used when user disable Google two-factor authentication and must confirm with a verification code.",
                "operationId": "2b48429aa131c88e4150b02ccbf4bd45",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Verification code. Client get it from Google authenticator application.",
                                        "type": "string",
                                        "example": "000000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Failed to verify code",
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "error_2fa_wrong_code": {
                                                    "description": "Invalid code",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "false",
                                            "errors": {
                                                "error_2fa_wrong_code": "Invalid code."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully disable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Disable Google 2fa authentication",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "true"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/2fa/email/disable": {
            "get": {
                "tags": [
                    "017. Two-factor authentication"
                ],
                "summary": "Disable Email 2FA authentication",
                "description": "This API call is used to disable Email 2FA authentication. After user must confirm with verification code(code will sent in email), call /2fa/email/disable/confirm endpoint.",
                "operationId": "77f4fba06576e93ae8590e31c535b680",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Disable Email 2FA authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Disable Email 2FA authentication",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "success": "true"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/2fa/email/disable/confirm": {
            "post": {
                "tags": [
                    "017. Two-factor authentication"
                ],
                "summary": "Confirm Email two factor authentication with verification code after disable 2fa",
                "description": "This API call is used when user  disable Email two-factor authentication and must confirm with a verification code.",
                "operationId": "debb206529e959d3574de26dad05e46f",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Verification code. The code is sent to the client's email.",
                                        "type": "integer",
                                        "example": "000000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Failed to verify code",
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "error_2fa_wrong_code": {
                                                    "description": "Invalid code",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "false",
                                            "errors": {
                                                "error_2fa_wrong_code": "Invalid code."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully confirm disable verification code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Disable verification code",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "true"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/2fa/create": {
            "get": {
                "tags": [
                    "017. Two-factor authentication"
                ],
                "summary": "Create 2FA authentication ID",
                "description": "This API call is used to get the 2FA authentication code ID. After that use, this ID for getting a 2FA token to call /API/2fa/verify endpoint.",
                "operationId": "b2c39c954480148cd600791d1707b9e5",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "invalid_status": {
                                                    "description": "Invalid status",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "invalid_status": "Invalid status."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Get 2FA authentication ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "twoFaRequired": {
                                            "description": "Two-factor authentication enabled",
                                            "type": "boolean"
                                        },
                                        "twoFAId": {
                                            "description": "2FA code ID for generate 2FA token.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "twoFaRequired": "true",
                                            "twoFAId": "93044fd1-6ff1-4945-8532-e1b5c8450848"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/available/currencies": {
            "get": {
                "tags": [
                    "007. User profile settings"
                ],
                "summary": "Get available currencies collection",
                "description": "This api call is used to get the collection of the available currencies",
                "operationId": "95ec31a0f633e5bcc5ee6cd32599f511",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "fiat": {
                                            "description": "Available fiat.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "crypto": {
                                            "description": "Available crypto.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "fiat": [
                                                "USD",
                                                "EUR",
                                                "GBR"
                                            ],
                                            "crypto": [
                                                "BTC",
                                                "LTC",
                                                "BCH"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "001. Authentication"
                ],
                "summary": "Login user",
                "description": "This API call is used to get user auth Bearer token and Refresh token. If user enabled 2FA authentication, this endpoint return 2FA code Id, use it for calling /api/2fa/verify endpoint, that endpoint returned 2FA token, and try again login with 2FA token.",
                "operationId": "78d5aae5a195c9030bf9282b54ad61b3",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@cratos.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret"
                                    },
                                    "twoFaToken": {
                                        "description": "Two-factor authentication token. It used for get access token. For get, must call /api/2fa/verify endpoint.",
                                        "type": "string",
                                        "example": "MLJq3uSJEOlCQFJTb4nM5nMPXJeExI9l40zxu7F9WA2aRM2IJxVIeVjMNfhr"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errros": {
                                            "properties": {
                                                "email_password_mismatch": {
                                                    "description": "Incorrect email or password.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "email_password_mismatch": "Incorrect email or password."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "status_banned": {
                                                    "description": "Your account is banned.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "status_banned": "Your account is banned."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "invalid_token": {
                                                    "description": "Fail to generate access token",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "invalid_token": "Invalid token."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "twoFaRequired": {
                                            "description": "Two-factor authentication enabled",
                                            "type": "boolean"
                                        },
                                        "twoFAId": {
                                            "description": "2FA code ID for generate 2FA token.",
                                            "type": "string"
                                        },
                                        "tokens": {
                                            "description": "Tokens",
                                            "properties": {
                                                "accessToken": {
                                                    "description": "Bearer(access) auth token",
                                                    "type": "string"
                                                },
                                                "refreshToken": {
                                                    "description": "Refresh token to get new access token.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "twoFaRequired": "true",
                                            "twoFAId": "null",
                                            "tokens": {
                                                "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMTQ5ODQ3YjBlNGJkNTQ1MDAxZGJlZTAwYTZjMWEwNjZmOWU5NTY3MWQ0YmMwZTk1ZmJmMDY5MWQzYTE3MWQ4MTZhZTIzYjY4NWUzY2I3MDIiLCJpYXQiOjE2NDMwOTk4MzQsIm5iZiI6MTY0MzA5OTgzNCwiZXhwIjoxNjc0NjM1ODM0LCJzdWIiOiI1YjA1ZTgxMC1jZGExLTRhMzYtYjE0Ni1mODA5OGM5NGJkMzYiLCJzY29wZXMiOltdfQ.LoNc40NN5S4EaNraNS8Qy9FeADehW5qOXfuZYDC5LGw1bCjfeI6z5VXUwGpRvef2ktLILMA3mvSgomDuhACOfqTZ-D8Cd2QGyeoa2b2qo_lDyGjxX6QNlMrrBkkevufdsv0OhN08YI8S6E4MZe5IIVJ2iHJy0KxIWeS5h9cnGU3lYohn1C27wmPxHMP5QTkzRT9iZi_ZCOVP6TOW_iTrkQWoa3bgiDgAB7gjGwiRrSvQbDcgJaBKoZqm0m-fO0PZt71ndoNMdk-JAxJFyJaT_yDfLOmWivZJTvSjCjJgswx35Z33C173jwhMveCGvqF_9W8w2pO1kKq3Q2G2fBR2ZpkaSol2w56BT2BHGWiGaIBl5RrcdikNuy0vfyrJt2qRf-L-9meUiOQv1zp6cFnoDDpF88Rp-Rq_sSruJYEVw5TapZMgg70Ea5YIv4GU6HGmBljmtRp8huSZJC0RHJVllQCEOjw4SznmjKuj2mQ-WjXT28Q9c2rV_zbURvDIYCG5Zdp4e9VHw6O1X8fiy_7j6Cv_cfyfZczk-hUvSA6nCsc-Vc2UXYQhl1YFWI8G1GDsduauU7or8byLOHLA25gPM1A2nYPwELeXNyx8LS_uWojMUxan-m8ARNkUg9yZgi5QI5gkD6mu9g_nHbv6pUqqrV6dDclUKX91gG7dxB6WNQ0",
                                                "refreshToken": "def502000e397f57366a3f0bd17b428c2303f42f63f3ef8722f704b5e750a999a9c00a854b972937fde1ca69c43aec40f9dc225b81d392a32ac92155b374f643a3aabe3db4e4535c536a0bacb5cebf8a2164da8149870778b6b9cbe889b5658520c2c1cdfa4a6223e175da9c45d44b509ea2bfef14ba2a7d18aa683f5d5d241fd96e215e3c94218cef83c771bedb0cdd58e37a6f17fdfc4ed38d085637de54e79ebecd28fa7ee2634c002c4d184cae915f97df9685d4895b3c4efed3de519504c06627ba73eb00b7ad41b24715e5423eca472782d6582bb6ea5a8d135d6c0c73ecee88163eefca146acf23e24ca72a4a3c5227086203bcf682c27cd1bd793000306b338b062945e0b16bf21ff7a21c06e629982ef7d5049fb41276879f0b624b6c12b666c4a0e5dfbfd31ba71cc00e33221fd449d757dc67f0cdf059d002deccd9ead5fc23886c8b8fb063b33eca72123786828c4e8812f5f21fb6aa38cd0959162dedcd908aab3285fdf98aa7f787d6af080f8f9285428b6a14da985d9244ae6b9adc30260c"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens/update": {
            "post": {
                "tags": [
                    "001. Authentication"
                ],
                "summary": "Update user access token",
                "description": "This API call is used to generate new auth Bearer(access) token and Refresh Token with Refresh Token",
                "operationId": "557cfc38edc43c7049aafae02dd4c9dd",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "refreshToken"
                                ],
                                "properties": {
                                    "refreshToken": {
                                        "type": "string",
                                        "example": "def502000e397f57366a3f0bd17b428c2303f42f63f3ef8722f704b5e750a999a9c00a854b972937fde1ca69c43aec40f9dc225b81d392a32ac92155b374f643a3aabe3db4e4535c536a0bacb5cebf8a2164da8149870778b6b9cbe889b5658520c2c1cdfa4a6223e175da9c45d44b509ea2bfef14ba2a7d18aa683f5d5d241fd96e215e3c94218cef83c771bedb0cdd58e37a6f17fdfc4ed38d085637de54e79ebecd28fa7ee2634c002c4d184cae915f97df9685d4895b3c4efed3de519504c06627ba73eb00b7ad41b24715e5423eca472782d6582bb6ea5a8d135d6c0c73ecee88163eefca146acf23e24ca72a4a3c5227086203bcf682c27cd1bd793000306b338b062945e0b16bf21ff7a21c06e629982ef7d5049fb41276879f0b624b6c12b666c4a0e5dfbfd31ba71cc00e33221fd449d757dc67f0cdf059d002deccd9ead5fc23886c8b8fb063b33eca72123786828c4e8812f5f21fb6aa38cd0959162dedcd908aab3285fdf98aa7f787d6af080f8f9285428b6a14da985d9244ae6b9adc30260c"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "412": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "invalid_token": {
                                                    "description": "Fail to generate access token",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "invalid_token": "Invalid token."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "description": "Bearer(access) auth token",
                                            "type": "string"
                                        },
                                        "refreshToken": {
                                            "description": "Refresh token to get new access token.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMTQ5ODQ3YjBlNGJkNTQ1MDAxZGJlZTAwYTZjMWEwNjZmOWU5NTY3MWQ0YmMwZTk1ZmJmMDY5MWQzYTE3MWQ4MTZhZTIzYjY4NWUzY2I3MDIiLCJpYXQiOjE2NDMwOTk4MzQsIm5iZiI6MTY0MzA5OTgzNCwiZXhwIjoxNjc0NjM1ODM0LCJzdWIiOiI1YjA1ZTgxMC1jZGExLTRhMzYtYjE0Ni1mODA5OGM5NGJkMzYiLCJzY29wZXMiOltdfQ.LoNc40NN5S4EaNraNS8Qy9FeADehW5qOXfuZYDC5LGw1bCjfeI6z5VXUwGpRvef2ktLILMA3mvSgomDuhACOfqTZ-D8Cd2QGyeoa2b2qo_lDyGjxX6QNlMrrBkkevufdsv0OhN08YI8S6E4MZe5IIVJ2iHJy0KxIWeS5h9cnGU3lYohn1C27wmPxHMP5QTkzRT9iZi_ZCOVP6TOW_iTrkQWoa3bgiDgAB7gjGwiRrSvQbDcgJaBKoZqm0m-fO0PZt71ndoNMdk-JAxJFyJaT_yDfLOmWivZJTvSjCjJgswx35Z33C173jwhMveCGvqF_9W8w2pO1kKq3Q2G2fBR2ZpkaSol2w56BT2BHGWiGaIBl5RrcdikNuy0vfyrJt2qRf-L-9meUiOQv1zp6cFnoDDpF88Rp-Rq_sSruJYEVw5TapZMgg70Ea5YIv4GU6HGmBljmtRp8huSZJC0RHJVllQCEOjw4SznmjKuj2mQ-WjXT28Q9c2rV_zbURvDIYCG5Zdp4e9VHw6O1X8fiy_7j6Cv_cfyfZczk-hUvSA6nCsc-Vc2UXYQhl1YFWI8G1GDsduauU7or8byLOHLA25gPM1A2nYPwELeXNyx8LS_uWojMUxan-m8ARNkUg9yZgi5QI5gkD6mu9g_nHbv6pUqqrV6dDclUKX91gG7dxB6WNQ0",
                                            "refreshToken": "def502000e397f57366a3f0bd17b428c2303f42f63f3ef8722f704b5e750a999a9c00a854b972937fde1ca69c43aec40f9dc225b81d392a32ac92155b374f643a3aabe3db4e4535c536a0bacb5cebf8a2164da8149870778b6b9cbe889b5658520c2c1cdfa4a6223e175da9c45d44b509ea2bfef14ba2a7d18aa683f5d5d241fd96e215e3c94218cef83c771bedb0cdd58e37a6f17fdfc4ed38d085637de54e79ebecd28fa7ee2634c002c4d184cae915f97df9685d4895b3c4efed3de519504c06627ba73eb00b7ad41b24715e5423eca472782d6582bb6ea5a8d135d6c0c73ecee88163eefca146acf23e24ca72a4a3c5227086203bcf682c27cd1bd793000306b338b062945e0b16bf21ff7a21c06e629982ef7d5049fb41276879f0b624b6c12b666c4a0e5dfbfd31ba71cc00e33221fd449d757dc67f0cdf059d002deccd9ead5fc23886c8b8fb063b33eca72123786828c4e8812f5f21fb6aa38cd0959162dedcd908aab3285fdf98aa7f787d6af080f8f9285428b6a14da985d9244ae6b9adc30260c"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "001. Authentication"
                ],
                "summary": "Logout user",
                "description": "This API call is used to logout user and revoke access token.",
                "operationId": "aeb23f7f7deeb3af8b6bf9844eb8d89d",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Successfully logged out",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "Successfully logged out"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/2fa/verify": {
            "post": {
                "tags": [
                    "017. Two-factor authentication"
                ],
                "summary": "Verify two factor authentication",
                "description": "This API call is used for verify 2FA code ID( for example after endpoint /api/login , if user has 2FA, user get 2FA code ID or after calling /api/2fa/create endpoint). This endpoint return 2FA token.",
                "operationId": "bf0f0f74491d1fc9d1eda5c62867d9aa",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "code",
                                    "twoFaId"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Verification code. If enabled Google 2FA get it from Google authenticator application, if enabled Email 2FA, is sent to email.",
                                        "type": "string",
                                        "example": "000000"
                                    },
                                    "twoFaId": {
                                        "description": "Two-factor authentication code identificator. It is got by calling /api/login or after calling /api/2fa/create endpoint.",
                                        "type": "string",
                                        "example": "93044fd1-6ff1-4945-8532-e1b5c8450848"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Action failed",
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "properties": {
                                                "error_2fa_wrong_code": {
                                                    "description": "Invalid code",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "false",
                                            "errors": {
                                                "error_2fa_wrong_code": "Invalid code."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Action failed",
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "properties": {
                                                "2fa_code_error": {
                                                    "description": "Not found 2FA code",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "false",
                                            "errors": {
                                                "2fa_code_error": "Not found 2FA code."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Seccessfully generate token.",
                                            "type": "boolean"
                                        },
                                        "token": {
                                            "description": "2FA token.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "true",
                                            "token": "MLJq3uSJEOlCQFJTb4nM5nMPXJeExI9l40zxu7F9WA2aRM2IJxVIeVjMNfhr"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify/email/get/code": {
            "post": {
                "tags": [
                    "001. Authentication"
                ],
                "summary": "Get email verification code",
                "description": "This API call is used to get email verification code.",
                "operationId": "452fb5b139209acfa0ff6ea2210829da",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "example": "test@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Code was sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Success",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ivalid properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error messages",
                                            "properties": {
                                                "error_already_sent_email": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "error": {
                                            "error_already_sent_email": "Code was already sent. If you do not get it make a request to /api/verify/email/resend/code endpoint."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify/email": {
            "get": {
                "tags": [
                    "001. Authentication"
                ],
                "summary": "Send email verification message to user email",
                "description": "This API call is used to send verification message to user email. ",
                "operationId": "51698a84af49cde6202cc3b56dd2f561",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "The verification message has been sent to the email successfully.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": "Email verification message was sent to email successfully."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "001. Authentication"
                ],
                "summary": "Verify email address",
                "description": "This API call is used to verify email address. Max attempt count for every received code is 3. After that code will be expired.",
                "operationId": "d2cfd1f179c1e6d5a09543b47a8d77fb",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "code"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "code": {
                                        "description": "Code which has been sent to the email.",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email has been verified successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "Token to confirm that email was verified. Send it with registration data.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "token": "eyJpdiI6Ik1OZWxHdlZRdEo1ZU0za0JORlQ0alE9PSIsInZhbHVlIjoiVkpPVWpZbnZxRCtmQ0xMOHdnV0h3ZmJ5TFpFUlF4MHBSSTZKVjlDTy9kNlRQbXppaWVMUzFGMllJYmpOVmZjWFdxb1JmMGdWUHI1aXB3WDkwN093SzQ1eExqQmoyM1Rya21GY0l4ckZERjA9IiwibWFjIjoiOWJhZmY4YmE2ZGVhYTk3ODZjODA3YTRiZTMxMTU5ODdlOGE1YzI3NTVmZDEzNDI4OWE3ZTRlYTVlODc3MjkyZCJ9"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ivalid properties. New code will be sent to email address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error messages",
                                            "properties": {
                                                "error": {
                                                    "properties": {
                                                        "code": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "error": {
                                            "code": "Invalid authentication code. Try limit is reached. Make request to /api/verify/email/resend/code endpoint to get new confirmation code."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify/phone/get/code": {
            "post": {
                "tags": [
                    "001. Authentication"
                ],
                "summary": "Get phone verification code",
                "description": "This API call is used to get phone verification code.",
                "operationId": "4e29d942457c22ee554f0205e6c36473",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "phone_cc_part",
                                    "phone_no_part"
                                ],
                                "properties": {
                                    "phone_cc_part": {
                                        "description": "Phone number country code part. Send country code without (+). For example 1 for USA",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "phone_no_part": {
                                        "description": "Phone number part",
                                        "type": "string",
                                        "example": "55555555"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Code was sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "success",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ivalid properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error messages",
                                            "properties": {
                                                "phone_no_part": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "error": {
                                            "phone_no_part": "Unable to send code to given phone number."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify/phone": {
            "post": {
                "tags": [
                    "001. Authentication"
                ],
                "summary": "Verify phone number",
                "description": "This API call is used to verify phone number. Max attempt count for every received code is 3. After that code will be expired.",
                "operationId": "c9999ea34047fed2d46df9c0ae8bda16",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "phone_cc_part",
                                    "phone_no_part",
                                    "code"
                                ],
                                "properties": {
                                    "phone_cc_part": {
                                        "description": "Phone number country code part. Send country code without (+). For example 1 for USA",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "phone_no_part": {
                                        "description": "Phone number part",
                                        "type": "string",
                                        "example": "55555555"
                                    },
                                    "code": {
                                        "description": "Code was sent to the phone",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Phone was verified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "Token to confirm that phone was verified. Send it with registration data.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "token": "eyJpdiI6Ik1OZWxHdlZRdEo1ZU0za0JORlQ0alE9PSIsInZhbHVlIjoiVkpPVWpZbnZxRCtmQ0xMOHdnV0h3ZmJ5TFpFUlF4MHBSSTZKVjlDTy9kNlRQbXppaWVMUzFGMllJYmpOVmZjWFdxb1JmMGdWUHI1aXB3WDkwN093SzQ1eExqQmoyM1Rya21GY0l4ckZERjA9IiwibWFjIjoiOWJhZmY4YmE2ZGVhYTk3ODZjODA3YTRiZTMxMTU5ODdlOGE1YzI3NTVmZDEzNDI4OWE3ZTRlYTVlODc3MjkyZCJ9"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ivalid properties.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error messages",
                                            "properties": {
                                                "error": {
                                                    "properties": {
                                                        "code": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "error": {
                                            "code": "Invalid authentication code. Try limit is reached. Make request to /api/verify/phone/resend/code endpoint to get new confirmation code."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/registration": {
            "post": {
                "tags": [
                    "001. Authentication"
                ],
                "summary": "Register user",
                "description": "This API call is used to register user. First of all you should do API call to /api/verify/email/get/code endpoint, which will provide you code that should be used in /api/verify/email endpoint to get token, that should be used in this endpoint as email_verification_token parameter.\r\n                 After that you should do API call to /api/verify/phone/get/code endpoint, which will provide you code that should be used in /api/verify/phone endpoint to get token, that should be used in this endpoint as phone_verification_token parameter",
                "operationId": "0054e16cabbd7879c9fe2fe5a040a99f",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "password",
                                    "phone_verification_token",
                                    "email_verification_token",
                                    "account_type"
                                ],
                                "properties": {
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "example": "Secret*1"
                                    },
                                    "phone_verification_token": {
                                        "description": "Token from phone verification",
                                        "type": "string",
                                        "example": "eyJpdiI6Ik1OZWxHdlZRdEo1ZU0za0JORlQ0alE9PSIsInZhbHVlIjoiVkpPVWpZbnZxRCtmQ0xMOHdnV0h3ZmJ5TFpFUlF4MHBSSTZKVjlDTy9kNlRQbXppaWVMUzFGMllJYmpOVmZjWFdxb1JmMGdWUHI1aXB3WDkwN093SzQ1eExqQmoyM1Rya21GY0l4ckZERjA9IiwibWFjIjoiOWJhZmY4YmE2ZGVhYTk3ODZjODA3YTRiZTMxMTU5ODdlOGE1YzI3NTVmZDEzNDI4OWE3ZTRlYTVlODc3MjkyZCJ9"
                                    },
                                    "email_verification_token": {
                                        "description": "Token from email verification",
                                        "type": "string",
                                        "example": "eyJpdiI6Ik1OZWxHdlZRdEo1ZU0za0JORlQ0alE9PSIsInZhbHVlIjoiVkpPVWpZbnZxRCtmQ0xMOHdnV0h3ZmJ5TFpFUlF4MHBSSTZKVjlDTy9kNlRQbXppaWVMUzFGMllJYmpOVmZjWFdxb1JmMGdWUHI1aXB3WDkwN093SzQ1eExqQmoyM1Rya21GY0l4ckZERjA9IiwibWFjIjoiOWJhZmY4YmE2ZGVhYTk3ODZjODA3YTRiZTMxMTU5ODdlOGE1YzI3NTVmZDEzNDI4OWE3ZTRlYTVlODc3MjkyZCJ9"
                                    },
                                    "account_type": {
                                        "description": "Account type. INDIVIDUAL=1; CORPORATE=2",
                                        "type": "integer",
                                        "enum": [
                                            "1",
                                            "2"
                                        ],
                                        "example": "1"
                                    },
                                    "ref": {
                                        "description": "User registration refferal token",
                                        "type": "string",
                                        "example": "67038f9e-610e-4675-b872-4e3f011814d9"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration completed succesfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "description": "Email.",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "description": "Phone.",
                                            "type": "string"
                                        },
                                        "accessToken": {
                                            "description": "Auth(access) Token.",
                                            "type": "string"
                                        },
                                        "refreshToken": {
                                            "description": "Refresh Token.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "email": "tes98787t@cratos.com",
                                            "phone": "1555789555",
                                            "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGcincskNJsdiJ9.eyJhdWQiOiIxIiwianRpIjoiZTBjOGUwMTJhYjhkNGY3ZWE3OGQwYzgyMzVmMTI2ODY2Y2ExNzM4ZGMzNjhkMWI3MTgwNDBmYzMzMDZhNDc2MDI1NTAzNDQ0ZTU1Mzk2MWEiLCJpYXQiOjE2NDMxODg1OTQsIm5iZiI6MTY0MzE4ODU5NCwiZXhwIjoxNjc0NzI0NTk0LCJzdWIiOiJlYmE1ZDE1Zi03NDA1LTQyZTQtYmM0My1kYTg4YTU3ZTlhOTgiLCJzY29wZXMiOltdfQ.yUiiYKodmndPD9VN7pbdYskb_bbEpkjhne-FIHdkYlcZH-Pyj3wIAyz62D_YcucTAyQX5FSJ2iAO5m8TjdrvhnG8ehHwogFyd9R5rHZx79fsoK2x09-Afx5ZOHdvgPeylWXVqy-ZdzDGh82cSslYuuvBfta7qWwJKoupWB6FhH16FRienEjjlsxMr3mBIY3Cyvfk7hChYAmrI9GagCEClWjy81i-fKJMdFArd066uT05-UVHXQq9FIvjYvUvzMT18vMTdWyYaSpVzNBj5Zv-dSqhoDAfSXcNXsbBR_TvL0bAUAlWQV5gOXXsLf1avv5kI6zOhU6D_kHFM7gIIZtaZrtZRxs598TAsa8qlaRkRedudikNvgtExPXI0WaLyO4iXyaq6QRl7OWNk-yeF4gGR-UOkiik4tqTHdYEeuXpX4V4_0jnwXIn63XrSxX9K03klcy6qd5emhi2yCVCnJrDlh2VCul7AT2LXdL1yjTnNug9HmSYLIhk26WX7M8EdvXE9Ol6FADgwr9ey5lBwa1_TpvOWkgvo32oPnwP4lsqMJifqpi0krRpMzVAYrpx9d1vvOTh2vbEiXN3z2XklK1W4kbWiEWZcqnsx3qRUTwULrLJFhWDqH4a3Pa3qkVn1VAu15bgN6u4myU3_Eu_A_Ev48LeJ0xlo7EpScujYQr7wtc",
                                            "refreshToken": "def502000897362d48a611ef9a0434e9002e681dfe3bf1ff7fbc4c54eadfcf2f20d3659b4cc8f7212242cda1539dbf3fad9e17772a2d12450197fbdec44424b62206786c2d34478dcd06032f5f14c9905972ce8567db375c7ab2363bdb8a222579d84a7726b83f2db39fba1bdf04910339aa88fe2a8eefdf405c7a0032dc0cd7d7f0ddb4e52274cbaf668cefaad1c6c23901e0bf9e7dc321f7900a02f1c3562f3385361a944710a30e4641e6726112ef2c623dcb5e28c0fe13e27f6f637afe242aee38c25c93e1f488bfec1d358a4b7c07cab01450917f6169930ad8ed999aaabdc36f886989c528db0f6d1aef6c0e3e2c85dc337819640aa69ced338053679bd499bced8a0bb893daf0d29432802cb35b59df8376c65d84fb65643d8aa7253f0ce3579de8435097612952d70675a7d835e2db9540d15f91f68f2e8a8a9d7cf30d905c72c88f9c83f21edfa7bfdf40e2e7cf34200bdaa616593b05209d396bdbc1788946bf11d310dc03953cdc2f8cb32583747f2168427288078fb970163eb00c2355d0e0b7"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Fail to generate access token.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "error": "Invalid token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ivalid properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error messages",
                                            "properties": {
                                                "email": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "error": {
                                            "phone_no_part": "Phone number field is required."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/cards": {
            "get": {
                "tags": [
                    "User Cards"
                ],
                "summary": "Users Cards",
                "description": "This API call is used to get user card",
                "operationId": "ba029bfc2dbbb7b6690097e4bf3b187f",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Cards",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cards": {
                                            "description": "User cards",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Card id",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Name",
                                                        "type": "string"
                                                    },
                                                    "last4": {
                                                        "description": "Last 4 numbers of card",
                                                        "type": "number"
                                                    },
                                                    "balance": {
                                                        "description": "Card balance",
                                                        "type": "number"
                                                    },
                                                    "verified": {
                                                        "description": "Card is verify or no",
                                                        "type": "boolean"
                                                    },
                                                    "status": {
                                                        "description": "status",
                                                        "type": "string"
                                                    },
                                                    "cardType": {
                                                        "description": "Card type",
                                                        "type": "string"
                                                    },
                                                    "paymentSystemName": {
                                                        "description": "PaymentSystemName Visa or MasterCard",
                                                        "type": "number"
                                                    },
                                                    "creationDate": {
                                                        "description": "Creation Date",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "cards": [
                                                {
                                                    "id": "6f2cb252-2d72-4b43-b8b9-51b56f7a226b",
                                                    "name": "Marat g",
                                                    "last4": "####",
                                                    "balance": 0,
                                                    "verified": 0,
                                                    "status": "Pending Payment",
                                                    "cardType": "virtual",
                                                    "paymentSystemName": "VISA",
                                                    "creationDate": "2022-11-07 07:31:16"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/card": {
            "post": {
                "tags": [
                    "010. Top Up by Card"
                ],
                "summary": "Create Top Up Card operation",
                "description": "This API call is used to create a new Top Up Card operation.",
                "operationId": "b28cd0908cf271eb7b581c3872434909",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "wallet_id",
                                    "currency",
                                    "amount"
                                ],
                                "properties": {
                                    "wallet_id": {
                                        "description": "Internal wallet id for top up operation.\r\n                                    To get all wallets, make API call to /api/wallets endpoint",
                                        "type": "string",
                                        "example": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                    },
                                    "currency": {
                                        "description": "Currency",
                                        "type": "string",
                                        "enum": [
                                            "USD",
                                            "EUR",
                                            "GBP"
                                        ],
                                        "example": "USD"
                                    },
                                    "amount": {
                                        "description": "Operation Amount",
                                        "type": "number",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "To continue to the payment page you should send post request to the url that you got from\r\n                       repsonse, and as request body parameters set other field values left in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cardPaymentProperties": {
                                            "description": "Payment details to send to Trust Payments with parametors",
                                            "properties": {
                                                "url": {
                                                    "description": "Payment Url with parametors.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "cardPaymentProperties": {
                                                "url": "https://payments.securetrading.net/process/payments/choice?sitereference=test_test79829&stprofile=default&stdefaultprofile=st_paymentcardonly&strequiredfields=nameoncard&currencyiso3a=EUR&mainamount=40&orderreference=223465fd-935a-42340-8234f-be39cc796873&version=2&ruleidentifier=STR-8&successfulurlnotification=https://app.cratos.net/webhook/payments/trust-payment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "amount": {
                                                    "description": "The amount is required",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "amount": "The amount is required."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/countries": {
            "get": {
                "tags": [
                    "007. User profile settings"
                ],
                "summary": "Get countries",
                "description": "This API call is used to get countries",
                "operationId": "478d740e5fc9505dd96863b6fd2495fc",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "banned",
                        "in": "query",
                        "description": "Countries are banned or not. 0 is for not banned countries, 1 is for banned couontries",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the country",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "United States"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Country code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "us"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Countries were sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "countries": {
                                            "description": "Countries",
                                            "properties": {
                                                "countryCode": {
                                                    "description": "Code of the country",
                                                    "type": "string"
                                                },
                                                "countryName": {
                                                    "description": "Name of the country",
                                                    "type": "string"
                                                },
                                                "isBanned": {
                                                    "description": "Country is banned or not.",
                                                    "type": "boolean"
                                                },
                                                "phoneCode": {
                                                    "description": "Phone codes of the country.",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "countries": [
                                                {
                                                    "countryCode": "us",
                                                    "countryName": "United States",
                                                    "isBanned": "false",
                                                    "phoneCode": [
                                                        "1"
                                                    ]
                                                },
                                                {
                                                    "countryCode": "au",
                                                    "countryName": "Australia",
                                                    "isBanned": "false",
                                                    "phoneCode": [
                                                        "61"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Countries not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "countries_error": {
                                                    "description": "Countries not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "countries_error": "Countries not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters given.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "banned": {
                                                    "description": "Countries not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "banned": "The selected banned status is invalid."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fiat-wallets": {
            "get": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Get fiat wallets",
                "description": "This API call is used to get user fiat wallets",
                "operationId": "3c6527fcac2e896fe8ac52b925bc6228",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "wallets": {
                                            "properties": {
                                                "id": {
                                                    "description": "Id of wallet",
                                                    "type": "string"
                                                },
                                                "accountId": {
                                                    "description": "Number of account",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Account status",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Account name",
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Account currency",
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "description": "Wallet country",
                                                    "type": "string"
                                                },
                                                "balance": {
                                                    "description": "Wallet balance",
                                                    "type": "number"
                                                },
                                                "createdAt": {
                                                    "description": "Account creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Account update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "wallets": [
                                                {
                                                    "id": "ce3a2e23-c5e9-47c6-be94-ff831ae4ea59",
                                                    "accountId": 939,
                                                    "status": "Active",
                                                    "name": "Sky Man GBP",
                                                    "currency": "GBP",
                                                    "country": null,
                                                    "balance": 9871.3,
                                                    "createdAt": "2022-12-16 07:46:23",
                                                    "updatedAt": "2023-01-10 13:54:04"
                                                },
                                                {
                                                    "id": "fb04694f-e512-4db1-a3ed-06264e1ac830",
                                                    "accountId": 929,
                                                    "status": "Active",
                                                    "name": "Vopi Vopiman USD",
                                                    "currency": "USD",
                                                    "country": null,
                                                    "balance": 99,
                                                    "createdAt": "2022-12-07 12:27:31",
                                                    "updatedAt": "2023-01-10 13:54:04"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fiat-wallet/{id}": {
            "get": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Get fiat wallet",
                "description": "This API call is used to get the fiat wallet",
                "operationId": "21b75d81ed779a3b78e3f7265211f721",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the wallet",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "s4a8s4a7-4848-5262-s45d-296b1bd288e1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "wallet": {
                                            "properties": {
                                                "id": {
                                                    "description": "Id of wallet",
                                                    "type": "string"
                                                },
                                                "accountId": {
                                                    "description": "Number of account",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Account status",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Account name",
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Account currency",
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "description": "Wallet country",
                                                    "type": "string"
                                                },
                                                "balance": {
                                                    "description": "Wallet balance",
                                                    "type": "number"
                                                },
                                                "createdAt": {
                                                    "description": "Account creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Account update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "wallet": {
                                                "id": "fb04694f-e512-4db1-a3ed-06264e1ac830",
                                                "accountId": 929,
                                                "status": "Active",
                                                "name": "Vopi Vopiman USD",
                                                "currency": "USD",
                                                "country": null,
                                                "balance": 99,
                                                "createdAt": "2022-12-07 12:27:31",
                                                "updatedAt": "2023-01-10 14:06:52"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wallet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "wallet": {
                                                    "description": "Wallet not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "wallet": "Wallet not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fiat-wallet": {
            "post": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Create wallet",
                "description": "This API call is used to create a new fiat wallet.",
                "operationId": "490504822d21586beb97945bec5aed47",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "currency"
                                ],
                                "properties": {
                                    "currency": {
                                        "description": "Currency for new wallet. USD, EUR, GBP, AUD, CAD",
                                        "type": "string",
                                        "enum": [
                                            "USD",
                                            "EUR",
                                            "GBP",
                                            "AUD",
                                            "CAD"
                                        ],
                                        "example": "USD"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "wallet": {
                                            "properties": {
                                                "id": {
                                                    "description": "Id of wallet",
                                                    "type": "string"
                                                },
                                                "accountId": {
                                                    "description": "Number of account",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Account status",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Account name",
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Account currency",
                                                    "type": "string"
                                                },
                                                "balance": {
                                                    "description": "Wallet balance",
                                                    "type": "number"
                                                },
                                                "createdAt": {
                                                    "description": "Account creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Account update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "wallet": {
                                                "id": "649a6b2e-be55-42a7-ae61-b5cf61b048c4",
                                                "accountId": 954,
                                                "status": "Active",
                                                "name": "Sky Man CAD",
                                                "currency": "CAD",
                                                "country": null,
                                                "balance": 0,
                                                "createdAt": "2023-01-10 15:48:03",
                                                "updatedAt": "2023-01-10 15:48:03"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wallet is not added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "properties": {
                                                "currency": {
                                                    "description": "The currency field is required.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "currency": "The currency field is required."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fiat-wallet/topup-wire": {
            "post": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Create Top Up Wire operation",
                "description": "This API call is used to create a new Top Up Wire operation.",
                "operationId": "a8bf946c62d2959b48f95f85e6d185a3",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "wallet_id",
                                    "wire_type",
                                    "currency",
                                    "amount",
                                    "provider_id"
                                ],
                                "properties": {
                                    "wallet_id": {
                                        "description": "Internal wallet id for top up operation.\r\n    To get all wallets, make API call to /api/wallets endpoint",
                                        "type": "string",
                                        "example": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                    },
                                    "wire_type": {
                                        "description": "wire type is  TOP UP SEPA = 1; TOP UP SWIFT = 0",
                                        "type": "integer",
                                        "enum": [
                                            "0",
                                            "1"
                                        ],
                                        "example": "1"
                                    },
                                    "amount": {
                                        "description": "Operation Amount",
                                        "type": "number",
                                        "example": 10
                                    },
                                    "provider_id": {
                                        "description": "Provider id\r\n    To get all providers, make API call to /api/providers/{currency}/{country}/{wireType} endpoint",
                                        "type": "string",
                                        "example": "7msf4baf-al68-49f7-la36-83A3eed92947"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "If operation was created successfully",
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "description": "Operation ID",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true,
                                            "id": "7msf4baf-al68-49f7-la36-83A3eed92947"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "amount": {
                                                    "description": "The amount is required",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "amount": "The amount is required."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Wallet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "wallet_id": {
                                                    "description": "Wallet not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "wallet_id": "Wallet not found."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Incorrect provider account type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "provider": {
                                                    "description": "Incorrect provider account type",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "provider": "Incorrect provider account type."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fiat-wallet/withdraw/wire": {
            "post": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Create Fiat Wallet Withdraw Wire operation",
                "description": "This API call is used to create a new Withdraw by Wire operation.",
                "operationId": "95f358de53ad180e7414e64fe142ceff",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "from_wallet",
                                    "amount",
                                    "to_wire_account",
                                    "wire_type",
                                    "provider_id"
                                ],
                                "properties": {
                                    "from_wallet": {
                                        "description": "Internal wallet id for withdraw operation.\r\n    To get all wallets, make API call to /api/wallets endpoint",
                                        "type": "string",
                                        "example": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                    },
                                    "amount": {
                                        "description": "Operation amount",
                                        "type": "number",
                                        "example": 0.5
                                    },
                                    "to_wire_account": {
                                        "description": "Clinet external wire account id for withdraw operation.\r\n    To get all wire accounts make API call to /api/accounts/wire endpoint\r\n    or to create a new account make API call to /api/account/wire endpoint",
                                        "type": "string",
                                        "example": "s4a8s4a7-4848-5262-s45d-296b1bd288e1"
                                    },
                                    "wire_type": {
                                        "description": "wire type is  WITHDRAW WIRE SEPA = 1; WITHDRAW WIRE SWIFT = 0",
                                        "type": "integer",
                                        "enum": [
                                            "0",
                                            "1"
                                        ],
                                        "example": "1"
                                    },
                                    "provider_id": {
                                        "description": "To get available providers, make API call to /api/providers/{currency}/{country}/{wireType} endpoint. Currency and country should be same as in wire account.",
                                        "type": "string",
                                        "example": "7msf4baf-al68-49f7-la36-83A3eed92947"
                                    },
                                    "twoFaToken": {
                                        "description": "This parameter is needed for 2FA verification. It is required, if the client's 2FA enabled. For get it, at first call /api/2fa/create endpoint.",
                                        "type": "string",
                                        "example": "JLfsSaXcjHwyHC3tejl3KAJxOWKXOIZIFQrelxFgfDj4loUYYkn4HtK2EvnL"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "If operation was created successfully",
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "description": "Operation ID",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true,
                                            "id": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "amount": {
                                                    "description": "The amount must be a number",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "amount": "The amount must be a number."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Operation is failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "withdrawal_crypto_fail": {
                                                    "description": "Operation is failed",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "withdrawal_crypto_fail": "Operation is failed, please contact to Support!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "provider": {
                                                    "description": "Account not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "provider": "Liquidity provider account not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fiat-wallet/buy-fiat-from-crypto": {
            "post": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Create Buy fiat from crypto operation",
                "description": "This API call is used to buy a fiat from crypto operation.",
                "operationId": "3e6b2c37fd52f54334cd50ecec6e1feb",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "fiat_wallet_id",
                                    "amount",
                                    "crypto_account_id"
                                ],
                                "properties": {
                                    "fiat_wallet_id": {
                                        "description": "Fiat wallet id for buy operation.\r\n    To get all fiat wallets, make API call to /api/fiat-wallets endpoint",
                                        "type": "string",
                                        "example": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                    },
                                    "amount": {
                                        "description": "Operation amount",
                                        "type": "number",
                                        "example": 0.5
                                    },
                                    "crypto_account_id": {
                                        "description": "Clinet crypto account id.\r\n    To get all crypto accounts make GET API call to /api/accounts/crypto endpoint\r\n    or to create a new account make POST API call to /api/account/crypto endpoint",
                                        "type": "string",
                                        "example": "s4a8s4a7-4848-5262-s45d-296b1bd288e1"
                                    },
                                    "twoFaToken": {
                                        "description": "This parameter is needed for 2FA verification. It is required, if the client's 2FA enabled. For get it, at first call /api/2fa/create endpoint.",
                                        "type": "string",
                                        "example": "JLfsSaXcjHwyHC3tejl3KAJxOWKXOIZIFQrelxFgfDj4loUYYkn4HtK2EvnL"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "If operation was created successfully",
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "description": "Operation ID",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true,
                                            "id": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "amount": {
                                                    "description": "The amount must be a number",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "amount": "The amount must be a number."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Operation is failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "buy_fiat_fail": {
                                                    "description": "Operation is failed",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "buy_fiat_fail": "Operation is failed, please contact to Support!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "provider": {
                                                    "description": "Account not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "provider": "Liquidity provider account not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fiat-wallet/buy-crypto-from-fiat": {
            "post": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Create Buy crypto from fiat operation",
                "description": "This API call is used to buy a crypto by fiat operation.",
                "operationId": "d81cb3f57cf9c6dcbe4a764a07fb8949",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "fiat_wallet_id",
                                    "amount",
                                    "crypto_account_id"
                                ],
                                "properties": {
                                    "fiat_wallet_id": {
                                        "description": "Fiat wallet id.\r\n    To get all fiat wallets, make API call to /api/fiat-wallets endpoint",
                                        "type": "string",
                                        "example": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                    },
                                    "amount": {
                                        "description": "Operation amount",
                                        "type": "number",
                                        "example": 0.5
                                    },
                                    "crypto_account_id": {
                                        "description": "Clinet crypto account id.\r\n    To get all crypto accounts make GET API call to /api/accounts/crypto endpoint\r\n    or to create a new account make POST API call to /api/account/crypto endpoint",
                                        "type": "string",
                                        "example": "s4a8s4a7-4848-5262-s45d-296b1bd288e1"
                                    },
                                    "twoFaToken": {
                                        "description": "This parameter is needed for 2FA verification. It is required, if the client's 2FA enabled. For get it, at first call /api/2fa/create endpoint.",
                                        "type": "string",
                                        "example": "JLfsSaXcjHwyHC3tejl3KAJxOWKXOIZIFQrelxFgfDj4loUYYkn4HtK2EvnL"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "If operation was created successfully",
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "description": "Operation ID",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true,
                                            "id": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "amount": {
                                                    "description": "The amount must be a number",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "amount": "The amount must be a number."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Operation is failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "buy_crypto_fail": {
                                                    "description": "Operation is failed",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "buy_crypto_fail": "Operation is failed, please contact to Support!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "wrong_token": {
                                                    "description": "Account not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "wrong_token": "Unable to verify 2FA authentication. Please, contact to your support."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/help/desk": {
            "get": {
                "tags": [
                    "015. Help desk"
                ],
                "summary": "Get help desk tickets",
                "description": "This API call is used to get all tickets",
                "operationId": "5e2e0609db77e40b91480e6f112255e6",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search tickets by subject text",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ticket_status",
                        "in": "query",
                        "description": "Ticket status is Opened = 1; Closed = 2. Must select one of these statuses.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "1",
                            "enum": [
                                "1",
                                "2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tickets": {
                                            "properties": {
                                                "id": {
                                                    "description": "Id of ticket",
                                                    "type": "string"
                                                },
                                                "ticketId": {
                                                    "description": "Number of ticket",
                                                    "type": "integer"
                                                },
                                                "subject": {
                                                    "description": "Subject ticket",
                                                    "type": "string"
                                                },
                                                "question": {
                                                    "description": "Question ticket",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "Ticket status",
                                                    "type": "string"
                                                },
                                                "toClient": {
                                                    "description": "Client who create ticket",
                                                    "type": "string"
                                                },
                                                "createdByClient": {
                                                    "description": "Ticket created by Client",
                                                    "type": "string"
                                                },
                                                "messages": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "Message ID",
                                                            "type": "string"
                                                        },
                                                        "creatorName": {
                                                            "description": "Ticket creator name",
                                                            "type": "string"
                                                        },
                                                        "viewed": {
                                                            "description": "Is seen message",
                                                            "type": "integer"
                                                        },
                                                        "file": {
                                                            "description": "File path",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Message text",
                                                            "type": "string"
                                                        },
                                                        "ticketId": {
                                                            "description": "Ticket Id",
                                                            "type": "string"
                                                        },
                                                        "createdAt": {
                                                            "description": "Message creation date",
                                                            "type": "string"
                                                        },
                                                        "updatedAt": {
                                                            "description": "Message update date",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "createdAt": {
                                                    "description": "Ticket creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Ticket update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "count": {
                                            "description": "Number of tickets for the current page.",
                                            "type": "integet"
                                        },
                                        "currentPage": {
                                            "description": "The current page number.",
                                            "type": "integer"
                                        },
                                        "perPage": {
                                            "description": "The number of tickets to be shown per page.",
                                            "type": "integer"
                                        },
                                        "totalPage": {
                                            "description": "Total pages",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "tickets": [
                                                {
                                                    "id": "a6e5ad33-0c44-4171-9395-93a0ba7279e5",
                                                    "ticketId": 1,
                                                    "subject": "Subject",
                                                    "question": "message",
                                                    "status": "Open",
                                                    "toClient": "Client#1",
                                                    "createdByClient": true,
                                                    "messages": [
                                                        {
                                                            "id": "b172b2c0-3787-413e-9b00-bb51126706fb",
                                                            "creatorName": "John Johnson",
                                                            "viewed": 0,
                                                            "file": "b172b2c0-3787-413e-9b00-bb51126706fb.jpg",
                                                            "message": "message",
                                                            "ticketId": "a6e5ad33-0c44-4171-9395-93a0ba7279e5",
                                                            "createdAt": "2022-02-08 11:05:46",
                                                            "updatedAt": "2022-02-08 11:05:47"
                                                        }
                                                    ],
                                                    "createdAt": "2022-02-08 11:05:44",
                                                    "updatedAt": "2022-02-08 11:05:44"
                                                }
                                            ],
                                            "count": 1,
                                            "currentPage": 1,
                                            "perPage": 3,
                                            "totalPages": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/store/ticket": {
            "post": {
                "tags": [
                    "015. Help desk"
                ],
                "summary": "Store ticket",
                "description": "This API call is used to create new ticket",
                "operationId": "6237d1f5693a70f7016b260dbaa126ee",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "subject",
                                    "question"
                                ],
                                "properties": {
                                    "subject": {
                                        "description": "Subject of ticket",
                                        "type": "string"
                                    },
                                    "question": {
                                        "description": "Question",
                                        "type": "string"
                                    },
                                    "file": {
                                        "description": "File to upload",
                                        "type": "file",
                                        "format": "file"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "subject": "My subject",
                                    "question": "My question"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message.",
                                            "properties": {
                                                "fail_store_ticket": {
                                                    "description": "Error message.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "fail_store_ticket": "Failed to add a new ticket."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Id of ticket",
                                            "type": "string"
                                        },
                                        "ticketId": {
                                            "description": "Number of ticket",
                                            "type": "integer"
                                        },
                                        "subject": {
                                            "description": "Subject ticket",
                                            "type": "string"
                                        },
                                        "question": {
                                            "description": "Question ticket",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Ticket status",
                                            "type": "string"
                                        },
                                        "toClient": {
                                            "description": "Client who create ticket",
                                            "type": "string"
                                        },
                                        "createdByClient": {
                                            "description": "Ticket created by Client",
                                            "type": "string"
                                        },
                                        "messages": {
                                            "properties": {
                                                "id": {
                                                    "description": "Message ID",
                                                    "type": "string"
                                                },
                                                "creatorName": {
                                                    "description": "Ticket creator name",
                                                    "type": "string"
                                                },
                                                "viewed": {
                                                    "description": "Is seen message",
                                                    "type": "integer"
                                                },
                                                "file": {
                                                    "description": "File path",
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "Message text",
                                                    "type": "string"
                                                },
                                                "ticketId": {
                                                    "description": "Ticket Id",
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "description": "Message creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Message update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "createdAt": {
                                            "description": "Ticket creation date",
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "description": "Ticket update date",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "id": "a6e5ad33-0c44-4171-9395-93a0ba7279e5",
                                            "ticketId": 1,
                                            "subject": "Subject",
                                            "question": "message",
                                            "status": "New",
                                            "toClient": "Client#1",
                                            "createdByClient": true,
                                            "messages": [
                                                {
                                                    "id": "b172b2c0-3787-413e-9b00-bb51126706fb",
                                                    "creatorName": "John Johnson",
                                                    "viewed": 0,
                                                    "file": "b172b2c0-3787-413e-9b00-bb51126706fb.jpg",
                                                    "message": "message",
                                                    "ticketId": "a6e5ad33-0c44-4171-9395-93a0ba7279e5",
                                                    "createdAt": "2022-02-08 11:05:46",
                                                    "updatedAt": "2022-02-08 11:05:47"
                                                }
                                            ],
                                            "createdAt": "2022-02-08 11:05:44",
                                            "updatedAt": "2022-02-08 11:05:44"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ticket/{id}": {
            "get": {
                "tags": [
                    "015. Help desk"
                ],
                "summary": "Get ticket",
                "description": "This API call is used to get ticket by id",
                "operationId": "ff70319b45fc2d11a83fd2fd0f004227",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ticket",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "ticket_error": {
                                                    "description": "Ticket not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "ticket_error": "Ticket not found"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Id of ticket",
                                            "type": "string"
                                        },
                                        "ticketId": {
                                            "description": "Number of ticket",
                                            "type": "integer"
                                        },
                                        "subject": {
                                            "description": "Subject ticket",
                                            "type": "string"
                                        },
                                        "question": {
                                            "description": "Question ticket",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Ticket status",
                                            "type": "string"
                                        },
                                        "toClient": {
                                            "description": "Client who create ticket",
                                            "type": "string"
                                        },
                                        "createdByClient": {
                                            "description": "Ticket created by Client",
                                            "type": "string"
                                        },
                                        "messages": {
                                            "properties": {
                                                "id": {
                                                    "description": "Message ID",
                                                    "type": "string"
                                                },
                                                "creatorName": {
                                                    "description": "Ticket creator name",
                                                    "type": "string"
                                                },
                                                "viewed": {
                                                    "description": "Is seen message",
                                                    "type": "integer"
                                                },
                                                "file": {
                                                    "description": "File path",
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "Message text",
                                                    "type": "string"
                                                },
                                                "ticketId": {
                                                    "description": "Ticket Id",
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "description": "Message creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Message update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "createdAt": {
                                            "description": "Ticket creation date",
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "description": "Ticket update date",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "id": "a6e5ad33-0c44-4171-9395-93a0ba7279e5",
                                            "ticketId": 1,
                                            "subject": "Subject",
                                            "question": "message",
                                            "status": "New",
                                            "toClient": "Client#1",
                                            "createdByClient": true,
                                            "messages": [
                                                {
                                                    "id": "b172b2c0-3787-413e-9b00-bb51126706fb",
                                                    "creatorName": "John Johnson",
                                                    "viewed": 0,
                                                    "file": "b172b2c0-3787-413e-9b00-bb51126706fb.jpg",
                                                    "message": "message",
                                                    "ticketId": "a6e5ad33-0c44-4171-9395-93a0ba7279e5",
                                                    "createdAt": "2022-02-08 11:05:46",
                                                    "updatedAt": "2022-02-08 11:05:47"
                                                }
                                            ],
                                            "createdAt": "2022-02-08 11:05:44",
                                            "updatedAt": "2022-02-08 11:05:44"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ticket/message": {
            "post": {
                "tags": [
                    "015. Help desk"
                ],
                "summary": "Create ticket message",
                "description": "This API call is used to create ticket message",
                "operationId": "1f8aed34666ec5e38e17a9ecbf4a1d4a",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message",
                                    "ticket_id"
                                ],
                                "properties": {
                                    "message": {
                                        "description": "New message for ticket, sent by client (max size 1000 characters)",
                                        "type": "string"
                                    },
                                    "ticket_id": {
                                        "description": "Ticket id to send message to",
                                        "type": "string"
                                    },
                                    "m_file": {
                                        "description": "File to upload",
                                        "type": "file",
                                        "format": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "ticket_message_error": {
                                                    "description": "Ticket not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "ticket_error": "You have reached your message limits. For every ticket you can create max 30 messages in an hour"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "ticket_id": {
                                                    "description": "Ticket not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "ticket_id": "Ticket not found."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Message ID",
                                            "type": "string"
                                        },
                                        "creatorName": {
                                            "description": "Ticket creator name",
                                            "type": "string"
                                        },
                                        "viewed": {
                                            "description": "Is seen message",
                                            "type": "integer"
                                        },
                                        "file": {
                                            "description": "File path",
                                            "type": "string"
                                        },
                                        "message": {
                                            "description": "Message text",
                                            "type": "string"
                                        },
                                        "ticketId": {
                                            "description": "Ticket Id",
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "description": "Message creation date",
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "description": "Message update date",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "id": "87c36cd0-5aeb-4911-a03e-34bea0dcb4d5",
                                            "creatorName": "John Johnson",
                                            "viewed": 0,
                                            "file": "b172b2c0-3787-413e-9b00-bb51126706fb.jpg",
                                            "message": "test5",
                                            "ticketId": "a6e5ad33-0c44-4171-9395-93a0ba7279e5",
                                            "createdAt": "2022-02-08 15:15:18",
                                            "updatedAt": "2022-02-08 15:15:18"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/close/ticket/{id}": {
            "get": {
                "tags": [
                    "015. Help desk"
                ],
                "summary": "Close ticket",
                "description": "This API call is used to close the ticket",
                "operationId": "233f8f1cab2c4ab4152057785b13ace5",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of ticket",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "fail_closed_ticket": {
                                                    "description": "Fail to close ticked",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "fail_closed_ticket": "Fail to close ticked"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully closed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ticket was successfully closed.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "Ticket was successfully closed."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ticket/message/file/{fileName}": {
            "get": {
                "tags": [
                    "015. Help desk"
                ],
                "summary": "Get ticket file",
                "description": "This API call is used to get the ticket message file",
                "operationId": "efd9b76a6b903d7af280ba88f8ee3d3c",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "description": "Name of ticket file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HO-VT6s70HC-mp3Nsk-xgmxv.jpg"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "none_file": {
                                                    "description": "File not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "none_file": "File not found"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Download file"
                    }
                }
            }
        },
        "/api/view/message/{id}": {
            "get": {
                "tags": [
                    "015. Help desk"
                ],
                "summary": "Ticket message mark as seen",
                "description": "This API call is used to mark ticket message as seen",
                "operationId": "03e964f828d490c4f1edf4f8fb6fc100",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "ID of ticket",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "message_not_found": {
                                                    "description": "There are no new messages for this ticket.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "message_not_found": "There are no new messages for this ticket."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message seen",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "Message seen"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/modules": {
            "get": {
                "tags": [
                    "Modules"
                ],
                "summary": "Get modules",
                "description": "This API call is used to get cratos modules",
                "operationId": "3bc8d485c5a8585599be02a8fb92e315",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cratos Modules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "modules": {
                                            "description": "Modules",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "description": "Name of module",
                                                        "type": "string"
                                                    },
                                                    "enabled": {
                                                        "description": "Module is active or no",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "modules": [
                                                {
                                                    "name": "wallester",
                                                    "enabled": true
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/notifications": {
            "get": {
                "tags": [
                    "016. Notifications"
                ],
                "summary": "Find notifications",
                "description": "This API call is used to get a paginated collection of notifications.",
                "operationId": "13bb50b4d3ce57b078545c57dfb63b08",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limiting the count of returned notifications",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Collection of notifications by pages.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Notification id",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Notification status",
                                            "type": "integer"
                                        },
                                        "viewedAt": {
                                            "description": "Notification seen time",
                                            "type": "string"
                                        },
                                        "notification": {
                                            "description": "Notification message",
                                            "properties": {
                                                "id": {
                                                    "description": "Notification ID",
                                                    "type": "integer"
                                                },
                                                "titleMessage": {
                                                    "description": "Message title",
                                                    "type": "string"
                                                },
                                                "shortBody": {
                                                    "description": "Notification text",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "created_at": {
                                            "description": "Time to created notification",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "notifications": [
                                                {
                                                    "id": 1,
                                                    "status": "Seen",
                                                    "viewedAt": "2022-02-11 15:06:38",
                                                    "titleMessage": "Successful Cratos operation ###",
                                                    "shortBody": "Dear client, Your operation ### for the amount of 1 has been successfully exchanged to 0.00000001 LTC and sent to your Cratos crypto wallet. In the attachment to the letter, you will find a report on this operation, which is also available in your personal account. If you have any questions please contact our support team.",
                                                    "created_at": "2021-11-02 13:07:11"
                                                }
                                            ],
                                            "count": 1,
                                            "currentPage": 10,
                                            "perPage": "1",
                                            "totalPages": 58
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/notification/{id}": {
            "get": {
                "tags": [
                    "016. Notifications"
                ],
                "summary": "Get information on notification(s)",
                "description": "This API call is used to get notification information by Id",
                "operationId": "3da90a1a965b1bf20eeaf41188b7ebcc",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Notification id",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Notification status",
                                            "type": "integer"
                                        },
                                        "viewedAt": {
                                            "description": "Notification seen time",
                                            "type": "string"
                                        },
                                        "notification": {
                                            "description": "Notification message",
                                            "type": "integer"
                                        },
                                        "created_at": {
                                            "description": "Time to created notification",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "id": 1,
                                            "status": "Seen",
                                            "viewedAt": "2022-02-11 15:06:38",
                                            "titleMessage": "Successful Cratos operation ###",
                                            "shortBody": "Dear client, Your operation ### for the amount of 1 has been successfully exchanged to 0.0000001 LTC and sent to your Cratos crypto wallet. In the attachment to the letter, you will find a report on this operation, which is also available in your personal account. If you have any questions please contact our support team."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "notification_error": {
                                                    "description": "Notification not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "notification_error": "Notification not found"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/notifications/{id}/seen": {
            "get": {
                "tags": [
                    "016. Notifications"
                ],
                "summary": "Make notification as seen",
                "description": "This API call is used to make notification as seen.",
                "operationId": "7fc99de1ada0499591632f318c89fd83",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Notification status change successfully",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "notification_error": {
                                                    "description": "Notification not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "errors": {
                                                "notification_error": "Notification not found"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operations": {
            "get": {
                "tags": [
                    "008. Operations"
                ],
                "summary": "Get operations",
                "description": "This API call is used to get all operations. Operation statuses can be PENDING, SUCCESSFULL AND DECLINED",
                "operationId": "00f33b4a28d9ad5476ab7ff333756d40",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "transaction_type",
                        "in": "query",
                        "description": "transaction_type is ALL = 1; TOP_UP_WIRE = 2;\r\n               TOP_UP_CRYPTO = 3; TOP_UP_CARD = 4; EXCHANGE = 5; WITHDRAW_CRYPTO = 7;\r\n               WITHDRAW_WIRE = 8; MERCHANT_PAYMENT = 9; TOP_UP_CARD_PF = 10; TOP_UP_CRYPTO_PF = 11; WITHDRAW_CRYPTO_PF = 12; TOP_UP_CRYPTO_EXTERNAL_PF = 13; TYPE_CRYPTO_TO_CRYPTO_PF = 14",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "1",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15
                            ]
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Operation number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "415"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Start date for operation filtration",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "example": "2015-09-07"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "End date for operation filtration",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "example": "2025-09-07"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Collection of operations by pages. Maximum 10 operations on each page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "1"
                        }
                    },
                    {
                        "name": "wallet",
                        "in": "query",
                        "description": "Client wallet id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1491c68c-ccss-cs12-8060-4904de321eca"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operations were got successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operations": {
                                            "description": "Operation id",
                                            "properties": {
                                                "operationId": {
                                                    "description": "Operation id",
                                                    "type": "string"
                                                },
                                                "operationNumber": {
                                                    "description": "Operation number",
                                                    "type": "integer"
                                                },
                                                "operationType": {
                                                    "description": "Operation type",
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "description": "Amount",
                                                    "type": "number"
                                                },
                                                "amountInEuro": {
                                                    "description": "Amount in euro",
                                                    "type": "number"
                                                },
                                                "fromCurrency": {
                                                    "description": "From currency",
                                                    "type": "string"
                                                },
                                                "toCurrency": {
                                                    "description": "To currency",
                                                    "type": "string"
                                                },
                                                "fromAccount": {
                                                    "description": "From account",
                                                    "type": "string"
                                                },
                                                "toAccount": {
                                                    "description": "To account",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "Status of the operation.",
                                                    "type": "string"
                                                },
                                                "date": {
                                                    "description": "Operation creation date and time",
                                                    "type": "string"
                                                },
                                                "transactionExplorerUrl": {
                                                    "description": "Blockchain explorer link for crypto transaction",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operations": [
                                                {
                                                    "operationId": "492a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                                    "operationNumber": 40,
                                                    "operationType": "Top up by SWIFT",
                                                    "amount": 7,
                                                    "amountInEuro": 5.99,
                                                    "fromCurrency": "USD",
                                                    "toCurrency": "LTC",
                                                    "fromAccount": "Swift Bulgaria payments",
                                                    "toAccount": "John Brown LTC",
                                                    "status": "Pending",
                                                    "date": "2022-01-01 21:00:00",
                                                    "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/15cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/"
                                                },
                                                {
                                                    "operationId": "592a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                                    "operationNumber": 41,
                                                    "operationType": "Top up by SWIFT",
                                                    "amount": 7,
                                                    "amountInEuro": 5.99,
                                                    "fromCurrency": "USD",
                                                    "toCurrency": "LTC",
                                                    "fromAccount": "Swift Bulgaria payments",
                                                    "toAccount": "John Brown LTC",
                                                    "status": "Successful",
                                                    "date": "2022-01-01 21:00:00",
                                                    "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/35cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/"
                                                },
                                                {
                                                    "operationId": "692a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                                    "operationNumber": 42,
                                                    "operationType": "Top up by SWIFT",
                                                    "amount": 7,
                                                    "amountInEuro": 5.99,
                                                    "fromCurrency": "USD",
                                                    "toCurrency": "LTC",
                                                    "fromAccount": "Swift Bulgaria payments",
                                                    "toAccount": "John Brown LTC",
                                                    "status": "Declined",
                                                    "date": "2022-01-01 21:00:00",
                                                    "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/45cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/"
                                                }
                                            ],
                                            "count": 10,
                                            "currentPage": 2,
                                            "perPage": 2,
                                            "totalPages": 5
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters given.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "transaction_type": {
                                                    "description": "Operations not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "transaction_type": "The selected transaction type is invalid"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/pf/topup/crypto/{id}": {
            "get": {
                "tags": [
                    "014. Payment Form"
                ],
                "summary": "Get Top Up Crypto PF operation.",
                "description": "This API call is used to get Top Up Crypto PF operation.",
                "operationId": "6a04c02a6d2c03dbcc437b3c329367c8",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Top Up Crypto PF Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "credited": {
                                            "description": "Credited amount",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "cardPaymentDetails": {
                                            "description": "Card payment details",
                                            "properties": {
                                                "transactionReference": {
                                                    "description": "Operation card transaction reference",
                                                    "type": "string"
                                                },
                                                "cardNumberMask": {
                                                    "description": "Card number mask.",
                                                    "type": "string"
                                                },
                                                "blockchainFee": {
                                                    "description": "Blockchain Fee",
                                                    "type": "number"
                                                },
                                                "topUpFee": {
                                                    "description": "Top up fee",
                                                    "type": "number"
                                                },
                                                "exchangeRate": {
                                                    "description": "Exchange rate",
                                                    "type": "number"
                                                },
                                                "payerName": {
                                                    "description": "Payer Name",
                                                    "type": "string"
                                                },
                                                "payerPhoneNumber": {
                                                    "description": "Payer Phone number",
                                                    "type": "string"
                                                },
                                                "payerEmail": {
                                                    "description": "Payer email",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "592a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                            "operationNumber": "35",
                                            "operationType": "Top up by crypto (PF)",
                                            "status": "SUCCESSFUL",
                                            "fromCurrency": "EUR",
                                            "amount": 10,
                                            "toCurrency": "BTC",
                                            "date": "2022-01-01 21:00:00",
                                            "transactionExplorerUrl": "https://live.blockcypher.com/btc/tx/35cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/",
                                            "cardPaymentDetails": {
                                                "cardNumberMask": "400000######1000",
                                                "blockchainFee": 0.0004,
                                                "topUpFee": 0.001,
                                                "transactionReference": "51-6-1346654",
                                                "exchangeRate": 153.74,
                                                "payerName": "John Doe",
                                                "payerPhoneNumber": "19026682819",
                                                "payerEmail": "jdoe@gmail.com"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/pf/crypto/crypto/{id}": {
            "get": {
                "tags": [
                    "014. Payment Form"
                ],
                "summary": "Get Top Up Crypto to Crypto PF operation.",
                "description": "This API call is used to get Top Up Crypto to Crypto PF operation.",
                "operationId": "e8e7f3d9891007c642389d4d0af02591",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Top Up Crypto to Crypto PF Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "topUpFee": {
                                            "description": "Top up fee",
                                            "type": "number"
                                        },
                                        "payerName": {
                                            "description": "Payer Name",
                                            "type": "string"
                                        },
                                        "payerPhone": {
                                            "description": "Payer Phone number",
                                            "type": "string"
                                        },
                                        "payerEmail": {
                                            "description": "Payer email",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "592a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                            "operationNumber": 45,
                                            "operationType": "Crypto to crypto (PF)",
                                            "amount": 0.07,
                                            "amountInEuro": 7.09,
                                            "fromCurrency": "LTC",
                                            "toCurrency": "LTC",
                                            "fromAccount": "External LTC Account",
                                            "toAccount": "Merchant account name",
                                            "status": "SUCCESSFUL",
                                            "date": "2022-01-01 21:00:00",
                                            "topUpFee": 0.001,
                                            "payerName": "John Doe",
                                            "payerPhoneNumber": "19026682819",
                                            "payerEmail": "jdoe@gmail.com"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/topup/crypto/{id}": {
            "get": {
                "tags": [
                    "009. Top Up Crypto"
                ],
                "summary": "Get Top Up Crypto operation",
                "description": "This API call is used to get Top Up Crypto operation",
                "operationId": "8d247687e6f374c8a71b75b2ef41a4dc",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Top Up Crypto Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "fromWallet": {
                                            "description": "Operation from wallet",
                                            "type": "string"
                                        },
                                        "topUpFee": {
                                            "description": "Top up fee",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "592a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                            "operationNumber": 41,
                                            "operationType": "Top up by crypto",
                                            "amount": 0.05397099,
                                            "amountInEuro": 8.25,
                                            "fromCurrency": "LTC",
                                            "toCurrency": "LTC",
                                            "fromAccount": "External LTC Account",
                                            "toAccount": "John Brown LTC",
                                            "status": "Successful",
                                            "date": "2022-01-01 21:00:00",
                                            "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/35cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/",
                                            "fromWallet": "M6svPWkKqVNbeALWq3oaAQ16thd2p6gNbm",
                                            "topUpFee": 0.001
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/topup/wire/{id}": {
            "get": {
                "tags": [
                    "011. Top Up Wire"
                ],
                "summary": "Get Top Up Wire operation.",
                "description": "This API call is used to get Top Up Wire operation.",
                "operationId": "49d36b33dec732be05cd392af335d927",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Top Up Wire Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "topUpMethod": {
                                            "description": "Top up method (Sepa or Swift)",
                                            "type": "string"
                                        },
                                        "bankCountry": {
                                            "description": "Provider country",
                                            "type": "string"
                                        },
                                        "topUpFee": {
                                            "description": "Top up fee",
                                            "type": "number"
                                        },
                                        "exchangeRate": {
                                            "description": "Exchange rate",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "592a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                            "operationNumber": 41,
                                            "operationType": "Top up by SWIFT",
                                            "amount": 7,
                                            "amountInEuro": 5.99,
                                            "fromCurrency": "USD",
                                            "toCurrency": "LTC",
                                            "fromAccount": "Swift Bulgaria payments",
                                            "toAccount": "John Brown LTC",
                                            "status": "Successful",
                                            "date": "2022-01-01 21:00:00",
                                            "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/35cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/",
                                            "topUpMethod": "SWIFT",
                                            "bankCountry": "Bulgaria",
                                            "topUpFee": 3,
                                            "exchangeRate": 192.95
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/fiat-wallet/buy-crypto-from-fiat/{id}": {
            "get": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Get Buy Crypto From Fiat Wallet operation.",
                "description": "This API call is used to get Buy Crypto From Fiat Wallet operation.",
                "operationId": "ed21c33386d2f265f9d65270e67c2bec",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Top Up Wire Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "topUpMethod": {
                                            "description": "Top up method (Sepa or Swift)",
                                            "type": "string"
                                        },
                                        "topUpFee": {
                                            "description": "Top up fee",
                                            "type": "number"
                                        },
                                        "exchangeRate": {
                                            "description": "Exchange rate",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "357b6c86-66fc-482e-9b4c-a2ef36a7cee7",
                                            "operationNumber": 10000,
                                            "operationType": "Buy crypto from fiat wallet",
                                            "amount": 28.7,
                                            "amountInEuro": 26.96,
                                            "credited": "0.00186075 BTC",
                                            "fromCurrency": "GBP",
                                            "toCurrency": "BTC",
                                            "fromAccount": "Sky Man GBP",
                                            "toAccount": "Sky Man BTC",
                                            "status": "Successful",
                                            "date": "2022-12-16 08:18:31",
                                            "transactionExplorerUrl": "https://mempool.space/tx/58040d2856b68df1f9ebcfb1ebf69d78edba345d62f0ff586bcfe8070e0dc2d6",
                                            "topUpFee": null,
                                            "exchangeRate": 14344.5
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/fiat-wallet/buy-fiat-from-crypto/{id}": {
            "get": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Get Buy Fiat From Crypto Wallet operation.",
                "description": "This API call is used to get Buy Fiat From Crypto Wallet operation.",
                "operationId": "fb26509cdd8ddf955019c924c46c7711",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Top Up Wire Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "topUpMethod": {
                                            "description": "Top up method (Sepa or Swift)",
                                            "type": "string"
                                        },
                                        "bankCountry": {
                                            "description": "Provider country",
                                            "type": "string"
                                        },
                                        "topUpFee": {
                                            "description": "Top up fee",
                                            "type": "number"
                                        },
                                        "exchangeRate": {
                                            "description": "Exchange rate",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "d6fc3bb4-b169-4d3a-85a4-3dcc8f47eb46",
                                            "operationNumber": 20084,
                                            "operationType": "Buy fiat from crypto wallet",
                                            "amount": 0.001,
                                            "amountInEuro": 16.43,
                                            "credited": "-",
                                            "fromCurrency": "BTC",
                                            "toCurrency": "GBP",
                                            "fromAccount": "Sky Man LTC",
                                            "toAccount": "Sky Man GBP",
                                            "status": "Successfull",
                                            "date": "2022-12-16 08:23:11",
                                            "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/35cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/",
                                            "topUpFee": null,
                                            "exchangeRate": 14344.7
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/fiat-wallet/topup-wire/{id}": {
            "get": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Get Top Up Wire operation.",
                "description": "This API call is used to get Top Up Wire operation.",
                "operationId": "a8b8600ef663218925870060aa945f9b",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Top Up Wire Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "topUpMethod": {
                                            "description": "Top up method (Sepa or Swift)",
                                            "type": "string"
                                        },
                                        "bankCountry": {
                                            "description": "Provider country",
                                            "type": "string"
                                        },
                                        "topUpFee": {
                                            "description": "Top up fee",
                                            "type": "number"
                                        },
                                        "exchangeRate": {
                                            "description": "Exchange rate",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "ca182671-4e18-4b15-9b84-f35b29c8e502",
                                            "operationNumber": 77,
                                            "operationType": "Top up fiat wallet by wire",
                                            "amount": 100,
                                            "amountInEuro": 95.14,
                                            "credited": "99 USD",
                                            "fromCurrency": "USD",
                                            "toCurrency": "USD",
                                            "fromAccount": "RBC",
                                            "toAccount": "Sky Man USD",
                                            "status": "Successful",
                                            "date": "2022-12-07 12:30:53",
                                            "transactionExplorerUrl": "",
                                            "topUpMethod": "SWIFT",
                                            "bankCountry": "Andorra",
                                            "topUpFee": 1,
                                            "exchangeRate": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/withdraw/crypto/{id}": {
            "get": {
                "tags": [
                    "012. Withdraw crypto"
                ],
                "summary": "Get Withdraw Crypto operation",
                "description": "This API call is used to get Withdraw Crypto operation",
                "operationId": "6889c10c4be9d8906c7836dd93015078",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Withdraw Crypto Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "walletVerified": {
                                            "description": "Is wallet verified.",
                                            "type": "string"
                                        },
                                        "blockchainFee": {
                                            "description": "Blockchain fee",
                                            "type": "number"
                                        },
                                        "withdrawalFee": {
                                            "description": "Withdrawal fee",
                                            "type": "number"
                                        },
                                        "walletServiceFee": {
                                            "description": "Wallet service fee",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "592a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                            "operationNumber": 41,
                                            "operationType": "Withdraw by crypto",
                                            "amount": 0.054,
                                            "amountInEuro": 8.26,
                                            "fromCurrency": "LTC",
                                            "toCurrency": "LTC",
                                            "fromAccount": "John Brown LTC",
                                            "toAccount": "External LTC Account",
                                            "status": "Successful",
                                            "date": "2022-01-01 21:00:00",
                                            "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/35cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/",
                                            "walletVerified": "Yes",
                                            "blockchainFee": 0.0002,
                                            "withdrawalFee": 0.01,
                                            "walletServiceFee": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/pf/withdraw/crypto/{id}": {
            "get": {
                "tags": [
                    "014. Payment Form"
                ],
                "summary": "Get Withdraw Crypto PF operation",
                "description": "This API call is used to get Withdraw Crypto PF operation",
                "operationId": "9bba09ab72176d20a81cf1c1c6b8ea3e",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Withdraw Crypto PF Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "walletVerified": {
                                            "description": "Is wallet verified.",
                                            "type": "string"
                                        },
                                        "blockchainFee": {
                                            "description": "Blockchain fee",
                                            "type": "number"
                                        },
                                        "withdrawalFee": {
                                            "description": "Withdrawal fee",
                                            "type": "number"
                                        },
                                        "walletServiceFee": {
                                            "description": "Wallet service fee",
                                            "type": "number"
                                        },
                                        "parentId": {
                                            "description": "Parent operation Id",
                                            "type": "string"
                                        },
                                        "parentOperationType": {
                                            "description": "Parent operation type",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "592a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                            "operationNumber": 41,
                                            "operationType": "Withdraw by crypto PF",
                                            "amount": 0.054,
                                            "amountInEuro": 8.26,
                                            "fromCurrency": "LTC",
                                            "toCurrency": "LTC",
                                            "fromAccount": "John Brown LTC",
                                            "toAccount": "External LTC Account",
                                            "status": "Successful",
                                            "date": "2022-01-01 21:00:00",
                                            "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/35cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/",
                                            "walletVerified": "Yes",
                                            "blockchainFee": 0.0002,
                                            "withdrawalFee": 0.01,
                                            "walletServiceFee": 0,
                                            "parentId": "693a3ed4-f5b7-96c2-7ecd-4165730746c9",
                                            "parentOperationType": "Bank Card (PF)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/withdraw/wire/{id}": {
            "get": {
                "tags": [
                    "013. Withdraw wire"
                ],
                "summary": "Get Withdraw Wire operation.",
                "description": "This API call is used to get Withdraw by Wire operation.",
                "operationId": "fff760755322ec92e4792bd85b53280b",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Withdraw Wire Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "withdrawalMethod": {
                                            "description": "Withdrawal method (Sepa or Swift)",
                                            "type": "string"
                                        },
                                        "withdrawalFee": {
                                            "description": "Withdrawal fee",
                                            "type": "number"
                                        },
                                        "blockchainFee": {
                                            "description": "Blockchain fee",
                                            "type": "number"
                                        },
                                        "country": {
                                            "description": "Provider country",
                                            "type": "string"
                                        },
                                        "exchangeRate": {
                                            "description": "Exchange Rate",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "592a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                            "operationNumber": 41,
                                            "operationType": "Withdraw by Wire swift",
                                            "amount": 0.12615505,
                                            "amountInEuro": 23.42,
                                            "fromCurrency": "LTC",
                                            "toCurrency": "USD",
                                            "fromAccount": "John Brown LTC",
                                            "toAccount": "Bulgaria Swift payments",
                                            "status": "Successful",
                                            "date": "2022-01-01 21:00:00",
                                            "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/35cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/",
                                            "withdrawalMethod": "SWIFT",
                                            "withdrawalFee": 1.5,
                                            "blockchainFee": 0.001,
                                            "country": "Bulgaria",
                                            "exchangeRate": 208.48
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/fiat-wallet/withdraw/wire/{id}": {
            "get": {
                "tags": [
                    "019. Fiat Wallets"
                ],
                "summary": "Get Fiat Withdraw Wire operation.",
                "description": "This API call is used to get Withdraw by Wire operation.",
                "operationId": "d8e8a3254439936acc7d3ed0c5b9c6f1",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Withdraw Wire Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "withdrawalMethod": {
                                            "description": "Withdrawal method (Sepa or Swift)",
                                            "type": "string"
                                        },
                                        "withdrawalFee": {
                                            "description": "Withdrawal fee",
                                            "type": "number"
                                        },
                                        "country": {
                                            "description": "Provider country",
                                            "type": "string"
                                        },
                                        "exchangeRate": {
                                            "description": "Exchange Rate",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "a7588539-f206-46cd-a800-d95057a3d8d9",
                                            "operationNumber": 10000,
                                            "operationType": "Withdraw from Fiat Wallet By Wire",
                                            "amount": 100,
                                            "amountInEuro": 93.92,
                                            "credited": "100 GBP",
                                            "fromCurrency": "GBP",
                                            "toCurrency": "GBP",
                                            "fromAccount": "Sky Man GBP",
                                            "toAccount": "RBC",
                                            "status": "Successful",
                                            "date": "2022-12-16 08:13:33",
                                            "transactionExplorerUrl": "",
                                            "withdrawalMethod": "SEPA",
                                            "withdrawalFee": 0,
                                            "country": "Lithuania"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/card/{id}": {
            "get": {
                "tags": [
                    "010. Top Up by Card"
                ],
                "summary": "Get Card operation.",
                "description": "This API call is used to get Card operation.",
                "operationId": "7acb8ef93cf0cb1e74bca70744aefe82",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank Card Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "topUpFee": {
                                            "description": "Top up fee",
                                            "type": "number"
                                        },
                                        "blockchainFee": {
                                            "description": "Blockchain fee",
                                            "type": "number"
                                        },
                                        "transactionID": {
                                            "description": "Card Transaction ID",
                                            "type": "string"
                                        },
                                        "exchangeRate": {
                                            "description": "Exchange Rate",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "592a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                            "operationNumber": 41,
                                            "operationType": "Bank Card",
                                            "amount": 100,
                                            "amountInEuro": 86.04,
                                            "fromCurrency": "USD",
                                            "toCurrency": "LTC",
                                            "fromAccount": "400000######1000",
                                            "toAccount": "John Brown LTC",
                                            "status": "Successful",
                                            "date": "2022-01-01 21:00:00",
                                            "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/35cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/",
                                            "transactionID": "56-9-1344643",
                                            "blockchainFee": 0.0002,
                                            "topUpFee": 1,
                                            "exchangeRate": 208.48
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/pf/card/{id}": {
            "get": {
                "tags": [
                    "014. Payment Form"
                ],
                "summary": "Get Top Up Card PF operation.",
                "description": "This API call is used to get Top Up Card PF operation.",
                "operationId": "82594d55734cc86fe1e5226bb92ac3ef",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Top Up Card PF Operation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "operationId": {
                                            "description": "Operation id",
                                            "type": "string"
                                        },
                                        "operationNumber": {
                                            "description": "Operation number",
                                            "type": "integer"
                                        },
                                        "operationType": {
                                            "description": "Operation type",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "number"
                                        },
                                        "amountInEuro": {
                                            "description": "Amount in euro",
                                            "type": "number"
                                        },
                                        "fromCurrency": {
                                            "description": "From currency",
                                            "type": "string"
                                        },
                                        "toCurrency": {
                                            "description": "To currency",
                                            "type": "string"
                                        },
                                        "fromAccount": {
                                            "description": "From account",
                                            "type": "string"
                                        },
                                        "toAccount": {
                                            "description": "To account",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Operation creation date and time",
                                            "type": "string"
                                        },
                                        "transactionExplorerUrl": {
                                            "description": "Blockchain explorer link for crypto transaction",
                                            "type": "string"
                                        },
                                        "topUpFee": {
                                            "description": "Top up fee",
                                            "type": "number"
                                        },
                                        "blockchainFee": {
                                            "description": "Blockchain fee",
                                            "type": "number"
                                        },
                                        "transactionID": {
                                            "description": "Card Transaction ID",
                                            "type": "string"
                                        },
                                        "exchangeRate": {
                                            "description": "Exchange Rate",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "operationId": "592a3ed3-f5a7-98c2-9ecc-4141730746c9",
                                            "operationNumber": 41,
                                            "operationType": "Bank Card (PF)",
                                            "amount": 100,
                                            "amountInEuro": 86.04,
                                            "fromCurrency": "USD",
                                            "toCurrency": "LTC",
                                            "fromAccount": "400000######1000",
                                            "toAccount": "John Brown LTC",
                                            "status": "Successful",
                                            "date": "2022-01-01 21:00:00",
                                            "transactionExplorerUrl": "https://live.blockcypher.com/ltc/tx/35cabe165b7f23ffc8a6f5d4251f24548efe796c7264925ba17lhc3c5d79199a/",
                                            "transactionID": "56-9-1344643",
                                            "blockchainFee": 0.0002,
                                            "topUpFee": 1,
                                            "exchangeRate": 208.48
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/get/operation/report/pdf/{id}": {
            "post": {
                "tags": [
                    "008. Operations"
                ],
                "summary": "Get report for some operation types.",
                "description": "This API call is used to get report for Top Up Wire operations.",
                "operationId": "eb233aaddc4f6feb98f97ed209bfb53e",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Operation id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "": {
                                            "description": "File Attachment",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operation_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operation_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not supported operation type for generating report.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "operationId": {
                                                    "description": "There is no generated pdf for this type of operation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operationId": "Invalid operation type."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/get/transaction/report/pdf/{id}": {
            "post": {
                "tags": [
                    "008. Operations"
                ],
                "summary": "Get report for transaction of the operation.",
                "description": "This API call is used to get report for transaction of the operation. Supported operation types are TOP UP BY CARD, TOP UP BY CARD (PF), WITHDRAW WIRE. For WITHDRAW WIRE operations, operation status must be successful.",
                "operationId": "f3f68ef55a98c69785912fc1407e4eb3",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Operation id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "": {
                                            "description": "File Attachment",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error message",
                                            "properties": {
                                                "operatio_error": {
                                                    "description": "Operation not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operatio_error": "Operation not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not supported operation type for generating report.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "operationId": {
                                                    "description": "There is no generated pdf for this type of operation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "operationId": "Invalid operation type."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/project/settings": {
            "get": {
                "tags": [
                    "018. Settings"
                ],
                "summary": "Get project settings",
                "description": "This API call is used to get project all settings.",
                "operationId": "559e207df222db219745a467765b2413",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "logoPng": {
                                            "description": "Project logo(png format)",
                                            "type": "string"
                                        },
                                        "colors": {
                                            "properties": {
                                                "mainColor": {
                                                    "description": "Project main color",
                                                    "type": "string"
                                                },
                                                "buttonColor": {
                                                    "description": "Project buttons color",
                                                    "type": "string"
                                                },
                                                "borderColor": {
                                                    "description": "Project borders color",
                                                    "type": "integer"
                                                },
                                                "notifyFromColor": {
                                                    "description": "Project notify color",
                                                    "type": "string"
                                                },
                                                "notifyToColor": {
                                                    "description": "Project notify color",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "logoPng": "https://example.com/logo-png.png",
                                            "colors": [
                                                {
                                                    "mainColor": "#000000",
                                                    "buttonColor": "#000000",
                                                    "borderColor": "#000000",
                                                    "notifyFromColor": "#000000",
                                                    "notifyToColor": "#000000"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/topup/wire": {
            "post": {
                "tags": [
                    "011. Top Up Wire"
                ],
                "summary": "Create Top Up Wire operation",
                "description": "This API call is used to create a new Top Up Wire operation.",
                "operationId": "d58ce463468177346791abeeef674f9d",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "wallet_id",
                                    "wire_type",
                                    "currency",
                                    "amount",
                                    "provider_id"
                                ],
                                "properties": {
                                    "wallet_id": {
                                        "description": "Internal wallet id for top up operation.\r\n                                To get all wallets, make API call to /api/wallets endpoint",
                                        "type": "string",
                                        "example": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                    },
                                    "wire_type": {
                                        "description": "wire type is  TOP UP SEPA = 1; TOP UP SWIFT = 0",
                                        "type": "integer",
                                        "enum": [
                                            "0",
                                            "1"
                                        ],
                                        "example": "1"
                                    },
                                    "currency": {
                                        "description": "Currency",
                                        "type": "string",
                                        "enum": [
                                            "USD",
                                            "EUR",
                                            "GBP"
                                        ],
                                        "example": "USD"
                                    },
                                    "amount": {
                                        "description": "Operation Amount",
                                        "type": "number",
                                        "example": 10
                                    },
                                    "provider_id": {
                                        "description": "Provider id\r\n                                To get all providers, make API call to /api/providers/{currency}/{country}/{wireType} endpoint",
                                        "type": "string",
                                        "example": "7msf4baf-al68-49f7-la36-83A3eed92947"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "If operation was created successfully",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "amount": {
                                                    "description": "The amount is required",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "amount": "The amount is required."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/providers": {
            "get": {
                "tags": [
                    "006. Providers"
                ],
                "summary": "Get providers",
                "description": "This API call is used to get providers.",
                "operationId": "0a7045cc68e0fafa251fd7cb03cbde5d",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country code where provider is available.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "bg"
                    },
                    {
                        "name": "wireType",
                        "in": "query",
                        "description": "wire type is  TOP UP SEPA = 1; TOP UP SWIFT = 2; WITHDRAW WIRE SEPA = 8; WITHDRAW WIRE SWIFT = 9",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                8,
                                9
                            ]
                        }
                    },
                    {
                        "name": "fiatType",
                        "in": "query",
                        "description": "Default = 1, For fiat = 2",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "USD",
                                "EUR",
                                "GBP"
                            ]
                        },
                        "example": "USD"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "providers": {
                                            "description": "Providers",
                                            "properties": {
                                                "id": {
                                                    "description": "Id of provider",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "Status of provider",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Name of provider",
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Currency of provider account",
                                                    "type": "string"
                                                },
                                                "providerLocation": {
                                                    "description": "The country code of the provider location",
                                                    "type": "string"
                                                },
                                                "availableCountryCodes": {
                                                    "description": "Country codes where provider is available.",
                                                    "type": "string"
                                                },
                                                "wireDetails": {
                                                    "properties": {
                                                        "accountHolder": {
                                                            "description": "Holder of account",
                                                            "type": "string"
                                                        },
                                                        "accountNumber": {
                                                            "description": "Account number",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "Account type",
                                                            "type": "string"
                                                        },
                                                        "iban": {
                                                            "description": "IBAN",
                                                            "type": "string"
                                                        },
                                                        "swift": {
                                                            "description": "swift",
                                                            "type": "string"
                                                        },
                                                        "bankName": {
                                                            "description": "Name of bank",
                                                            "type": "string"
                                                        },
                                                        "bankAddress": {
                                                            "description": "Address of bank",
                                                            "type": "string"
                                                        },
                                                        "correspondentBank": {
                                                            "description": "Correspondent bank",
                                                            "type": "string"
                                                        },
                                                        "correspondentBankSwift": {
                                                            "description": "Correspondent bank swift",
                                                            "type": "string"
                                                        },
                                                        "intermediaryBank": {
                                                            "description": "Intermediary bank",
                                                            "type": "string"
                                                        },
                                                        "intermediaryBankSwift": {
                                                            "description": "Intermediary bank swift",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "providers": [
                                                {
                                                    "id": "f3ab6d19-4934-4633-6687-ed744b26b5f7",
                                                    "status": "Active",
                                                    "name": "Provider name",
                                                    "currency": "USD",
                                                    "providerLocation": "bg",
                                                    "wireDetails": {
                                                        "accountHolder": "(your beneficiary account name)",
                                                        "accountNumber": "220148",
                                                        "beneficiaryAddress": "P.O. Box 283 42343 Road Rd. New York 87454",
                                                        "type": "Swift",
                                                        "iban": "SD47969000000123280738595",
                                                        "swift": "FE34343R43985",
                                                        "bankName": "Centric Bank",
                                                        "bankAddress": "4320 Linglestown Road, Harrisburg, PA 17112",
                                                        "correspondentBank": "CITIBANK N. A., NEW YORK",
                                                        "correspondentBankSwift": "CITIUS33",
                                                        "intermediaryBank": "",
                                                        "intermediaryBankSwift": ""
                                                    },
                                                    "availableCountryCodes": [
                                                        "bg",
                                                        "lt",
                                                        "cz",
                                                        "gb",
                                                        "sk",
                                                        "es",
                                                        "lu",
                                                        "cy",
                                                        "se",
                                                        "fr",
                                                        "dk",
                                                        "ro",
                                                        "be"
                                                    ]
                                                },
                                                {
                                                    "id": "f3ab6d19-4934-4633-6687-ed744b26b5f7",
                                                    "status": "Active",
                                                    "name": "Provider name",
                                                    "currency": "USD",
                                                    "providerLocation": "bg",
                                                    "wireDetails": {
                                                        "accountHolder": "(your beneficiary account name)",
                                                        "accountNumber": "2342534",
                                                        "beneficiaryAddress": "P.O. Box 283 1478 Road Rd. New York 9851",
                                                        "type": "Swift",
                                                        "iban": "SD479690000001523452345738595",
                                                        "swift": "FE3t524trt3985",
                                                        "bankName": "Centric Bank USA",
                                                        "bankAddress": "6867 New York, Harrisburg, PA 63534543",
                                                        "correspondentBank": "CITIBANK N. A., NEW YORK",
                                                        "correspondentBankSwift": "CITIUS33",
                                                        "intermediaryBank": "",
                                                        "intermediaryBankSwift": ""
                                                    },
                                                    "availableCountryCodes": [
                                                        "bg",
                                                        "lt",
                                                        "cz",
                                                        "gb",
                                                        "sk",
                                                        "es",
                                                        "lu",
                                                        "cy",
                                                        "se",
                                                        "fr",
                                                        "dk",
                                                        "ro",
                                                        "be"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "accounts": {
                                                    "description": "Accounts not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "accounts": "Accounts not found."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "currency": {
                                                    "description": "Currency is required",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "currency": "Currency is required."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/card/order": {
            "post": {
                "tags": [
                    "card order"
                ],
                "summary": "Create wallester account detail",
                "description": "Create account in wallester",
                "operationId": "createWallesterAccount",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "cardType",
                                    "security",
                                    "cardDeliveryAddress"
                                ],
                                "properties": {
                                    "cardType": {
                                        "type": "string",
                                        "format": "cardType",
                                        "example": "plastic"
                                    },
                                    "security": {
                                        "description": "Card security",
                                        "type": "object",
                                        "example": {
                                            "password3DS": "string",
                                            "internetPurchases": true,
                                            "overallLimitsEnabled": true,
                                            "contactlessPurchases": true,
                                            "atmWithdrawals": true
                                        }
                                    },
                                    "limits": {
                                        "type": "object",
                                        "example": {
                                            "daily_purchase": 0,
                                            "daily_withdrawal": 0,
                                            "daily_internet_purchase": 0,
                                            "daily_contactless_purchase": 0,
                                            "weekly_purchase": 0,
                                            "weekly_withdrawal": 0,
                                            "weekly_internet_purchase": 0,
                                            "weekly_contactless_purchase": 0,
                                            "monthly_purchase": 0,
                                            "monthly_withdrawal": 0,
                                            "monthly_internet_purchase": 0,
                                            "monthly_contactless_purchase": 0,
                                            "transaction_purchase": 0,
                                            "transaction_withdrawal": 0,
                                            "transaction_internet_purchase": 0,
                                            "transaction_contactless_purchase": 0
                                        }
                                    },
                                    "cardDeliveryAddress": {
                                        "type": "object",
                                        "example": {
                                            "firstName": "string",
                                            "lastName": "string",
                                            "address_1": "string",
                                            "address_2": "string",
                                            "zipCode": "number",
                                            "city": "string",
                                            "countryCode": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "cardType",
                                        "security",
                                        "cardDeliveryAddress"
                                    ],
                                    "properties": {
                                        "cardAccountDetail": {
                                            "type": "object",
                                            "format": "cardAccountDetail",
                                            "example": {
                                                "id": "4f83df2f-5d3e-4709-9a9e-ff59270f9cbc",
                                                "account_id": "1772bae8-450b-44ac-accc-2a73d0814091",
                                                "name": "Marat g",
                                                "wallester_account_id": null,
                                                "card_type": 1,
                                                "status": 0,
                                                "contactless_purchases": 1,
                                                "atm_withdrawals": 1,
                                                "internet_purchases": 1,
                                                "overall_limits_enabled": 1,
                                                "password_3ds": "string",
                                                "payment_method": null,
                                                "is_confirmed": 0,
                                                "card_mask": null,
                                                "limits": {
                                                    "daily_purchase": 0,
                                                    "daily_withdrawal": 0,
                                                    "daily_internet_purchase": 0,
                                                    "daily_contactless_purchase": 0,
                                                    "weekly_purchase": 0,
                                                    "weekly_withdrawal": 0,
                                                    "weekly_internet_purchase": 0,
                                                    "weekly_contactless_purchase": 0,
                                                    "monthly_purchase": 0,
                                                    "monthly_withdrawal": 0,
                                                    "monthly_internet_purchase": 0,
                                                    "monthly_contactless_purchase": 0,
                                                    "transaction_purchase": 0,
                                                    "transaction_withdrawal": 0,
                                                    "transaction_internet_purchase": 0,
                                                    "transaction_contactless_purchase": 0
                                                },
                                                "created_at": "2022-10-22T14:12:55.000000Z",
                                                "updated_at": "2022-10-22T14:12:55.000000Z",
                                                "wallester_card_id": null,
                                                "is_blocked": 0,
                                                "is_paid": 0,
                                                "operation_id": null
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Card account detail not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Card account detail not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/card/payment/wire": {
            "post": {
                "tags": [
                    "card payment"
                ],
                "summary": "Wallester card payment by wire",
                "description": "CardPaymentBywire",
                "operationId": "CardPaymentBywire",
                "requestBody": {
                    "description": "WallesterAccountId,ProvideAccountId,Currency",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "wallesterAccountId",
                                    "providerAccountId",
                                    "currency"
                                ],
                                "properties": {
                                    "wallesterAccountId": {
                                        "type": "string",
                                        "format": "Id wallester credits that we pay",
                                        "example": "f652f282-e76b-48f1-a9a3-3dc3af5a42b6"
                                    },
                                    "providerAccountId": {
                                        "description": "Id bank card from which money should be debited",
                                        "type": "string",
                                        "example": "444fb102-0469-4b8c-be75-206e1eadac78"
                                    },
                                    "currency": {
                                        "description": "Currency in which we pay",
                                        "type": "string",
                                        "example": "USD"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "cardType",
                                        "security",
                                        "cardDeliveryAddress"
                                    ],
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "message",
                                            "example": "We have successfully received your order for issuing a card."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Liquidity provider account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Liquidity provider account not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/card/payment/crypto": {
            "post": {
                "tags": [
                    "card payment"
                ],
                "summary": "Card payment by crypto",
                "description": "Pay wallester card order",
                "operationId": "cardPaymentByCrypto",
                "requestBody": {
                    "description": "BankCardId, fromCryptoWalletId, limits",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bankCardId",
                                    "fromCryptoWalletId",
                                    "limits"
                                ],
                                "properties": {
                                    "bankCardId": {
                                        "type": "string",
                                        "format": "bankCardId",
                                        "example": "f652f282-e76b-48f1-a9a3-3dc3af5a42b6"
                                    },
                                    "fromCryptoWalletId": {
                                        "description": "From crypto wallet ID",
                                        "type": "object",
                                        "example": "8577c9a3-6f3c-42b5-9cfd-f5f3cbb20119"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "bankCardId",
                                        "fromCryptoWalletId",
                                        "limits"
                                    ],
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": {
                                                "message": "We have successfully received your order for issuing a card."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Card order failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "error": "Card order failed."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/wallester/payment/methods": {
            "get": {
                "tags": [
                    "Wallester card order payment methods"
                ],
                "summary": "Get wallester card order payment methods",
                "description": "This API call is used to get wallester card order payment methods",
                "operationId": "6bb55377cae5cfad65604c6aa2d239cd",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallester card order payment methods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "availablePaymentMethods": {
                                            "description": "Payment methods",
                                            "type": "object"
                                        },
                                        "1": {
                                            "description": "Bank Card",
                                            "type": "string"
                                        },
                                        "2": {
                                            "description": "Sepa",
                                            "type": "string"
                                        },
                                        "3": {
                                            "description": "Crypto Currency",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "availablePaymentMethods": {
                                                "1": "Bank Card",
                                                "2": "SEPA",
                                                "3": "Cryptocurrency"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/wallester/card/prices": {
            "get": {
                "tags": [
                    "Wallester Card Prices"
                ],
                "summary": "GGet Wallester card prices",
                "description": "This API call is used to get Wallester card prices",
                "operationId": "7799f906d0856c245962e51be13a1b7b",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallester card order payment methods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "prices": {
                                            "description": "Wallester Card Prices",
                                            "type": "object"
                                        },
                                        "plastic": {
                                            "description": "Plastic card price",
                                            "type": "number"
                                        },
                                        "virtual": {
                                            "description": "Virtual card price",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "prices": {
                                                "plastic": 5000,
                                                "virtual": 2000
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/wallets": {
            "get": {
                "tags": [
                    "002. Wallets"
                ],
                "summary": "Get wallets",
                "description": "This API call is used to get user wallets",
                "operationId": "77af8a1cec7e3f61d4e5191c8a07cb97",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "wallets": {
                                            "properties": {
                                                "id": {
                                                    "description": "Id of wallet",
                                                    "type": "string"
                                                },
                                                "accountId": {
                                                    "description": "Number of account",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Account status",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Account name",
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Account currency",
                                                    "type": "string"
                                                },
                                                "isBlocked": {
                                                    "description": "Wallet block status",
                                                    "type": "boolean"
                                                },
                                                "balance": {
                                                    "description": "Wallet balance",
                                                    "type": "number"
                                                },
                                                "createdAt": {
                                                    "description": "Account creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Account update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "wallets": [
                                                {
                                                    "id": "s4a8s4a7-4848-5262-s45d-296b1bd288e1",
                                                    "accountId": 315,
                                                    "status": "Active",
                                                    "name": "Good Invest BCH",
                                                    "currency": "BCH",
                                                    "isBlocked": true,
                                                    "balance": 0,
                                                    "createdAt": "2021-09-14 18:38:04",
                                                    "updatedAt": "2022-02-07 15:29:07"
                                                },
                                                {
                                                    "id": "s4a8s4a7-4848-5262-s45d-296b1bd288e1",
                                                    "accountId": 316,
                                                    "status": "Active",
                                                    "name": "Good Invest LTC",
                                                    "currency": "LTC",
                                                    "isBlocked": false,
                                                    "balance": 0,
                                                    "createdAt": "2021-09-14 18:38:04",
                                                    "updatedAt": "2022-02-07 15:29:07"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/wallet/{id}": {
            "get": {
                "tags": [
                    "002. Wallets"
                ],
                "summary": "Get wallet",
                "description": "This API call is used to get the wallet",
                "operationId": "03eabfd159730e9e2ac6cf7324ed36b9",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the wallet",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "s4a8s4a7-4848-5262-s45d-296b1bd288e1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "wallet": {
                                            "properties": {
                                                "id": {
                                                    "description": "Id of wallet",
                                                    "type": "string"
                                                },
                                                "accountId": {
                                                    "description": "Number of account",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Account status",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Account name",
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Account currency",
                                                    "type": "string"
                                                },
                                                "cryptoDetails": {
                                                    "properties": {
                                                        "label": {
                                                            "description": "Wallet name",
                                                            "type": "string"
                                                        },
                                                        "address": {
                                                            "description": "Wallet address",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "isBlocked": {
                                                    "description": "Wallet block status",
                                                    "type": "boolean"
                                                },
                                                "balance": {
                                                    "description": "Wallet balance",
                                                    "type": "number"
                                                },
                                                "createdAt": {
                                                    "description": "Account creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Account update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "wallet": {
                                                "id": "s4a8s4a7-4848-5262-s45d-296b1bd288e1",
                                                "accountId": 315,
                                                "status": "Active",
                                                "name": "Good Invest BCH",
                                                "currency": "BCH",
                                                "cryptoDetails": {
                                                    "label": "Hoper Invest BCH",
                                                    "address": "4Aty6cyHl2spu5OifAHtV6cQTUWdeqhmg4"
                                                },
                                                "isBlocked": true,
                                                "balance": 0,
                                                "createdAt": "2021-09-14 18:38:04",
                                                "updatedAt": "2022-02-07 15:29:07"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wallet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "wallet": {
                                                    "description": "Wallet not found",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "wallet": "Wallet not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/wallet": {
            "post": {
                "tags": [
                    "002. Wallets"
                ],
                "summary": "Create wallet",
                "description": "This API call is used to create a new wallet.",
                "operationId": "c50521e125479a6d73cfebd39805d0b8",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "cryptocurrency"
                                ],
                                "properties": {
                                    "cryptocurrency": {
                                        "description": "Coin for new wallet. BTC LTC or BCH",
                                        "type": "string",
                                        "enum": [
                                            "BTC",
                                            "LTC",
                                            "BCH"
                                        ],
                                        "example": "BTC"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "wallet": {
                                            "properties": {
                                                "id": {
                                                    "description": "Id of wallet",
                                                    "type": "string"
                                                },
                                                "accountId": {
                                                    "description": "Number of account",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Account status",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Account name",
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Account currency",
                                                    "type": "string"
                                                },
                                                "cryptoDetails": {
                                                    "properties": {
                                                        "label": {
                                                            "description": "Wallet name",
                                                            "type": "string"
                                                        },
                                                        "address": {
                                                            "description": "Wallet address",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "balance": {
                                                    "description": "Wallet balance",
                                                    "type": "number"
                                                },
                                                "createdAt": {
                                                    "description": "Account creation date",
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "description": "Account update date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "wallet": {
                                                "id": "s4a8s4a7-4848-5262-s45d-296b1bd288e1",
                                                "accountId": 315,
                                                "status": "Active",
                                                "name": "Good Invest BCH",
                                                "currency": "BCH",
                                                "cryptoDetails": {
                                                    "label": "Hoper Invest BCH",
                                                    "address": "4Aty6cyHl2spu5OifAHtV6cQTUWdeqhmg4"
                                                },
                                                "balance": 0,
                                                "createdAt": "2021-09-14 18:38:04",
                                                "updatedAt": "2022-02-07 15:29:07"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wallet is not added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "properties": {
                                                "cryptocurrency": {
                                                    "description": "The cryptocurrency field is required.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "cryptocurrency": "The cryptocurrency field is required."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/withdraw/crypto": {
            "post": {
                "tags": [
                    "012. Withdraw crypto"
                ],
                "summary": "Create Withdraw Crypto operation",
                "description": "This API call is used to create a new Withdraw Crypto operation.",
                "operationId": "0a99c233a061e6b90693d0fe633daae1",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "from_wallet",
                                    "amount",
                                    "to_crypto_account"
                                ],
                                "properties": {
                                    "from_wallet": {
                                        "description": "Internal wallet id for withdraw operation.\r\n                                To get all wallets, make API call to /api/wallets endpoint",
                                        "type": "string",
                                        "example": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                    },
                                    "amount": {
                                        "description": "Operation amount",
                                        "type": "number",
                                        "example": 0.5
                                    },
                                    "twoFaToken": {
                                        "description": "This parameter is needed for 2FA verification. It is required, if the client's 2FA enabled. For get it, at first call /api/2fa/create endpoint.",
                                        "type": "string",
                                        "example": "JLfsSaXcjHwyHC3tejl3KAJxOWKXOIZIFQrelxFgfDj4loUYYkn4HtK2EvnL"
                                    },
                                    "to_crypto_account": {
                                        "description": "Clinet external account id for withdraw operation.\r\n                                To get all crypto accounts, make API call to /api/accounts/crypto endpoint\r\n                                or to create a new account,  make API call to /api/account/crypto endpoint",
                                        "type": "string",
                                        "example": "s4a8s4a7-4848-5262-s45d-296b1bd288e1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "If operation was created successfully",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "amount": {
                                                    "description": "The amount may not be greater than 10",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "amount": "The amount may not be greater than 10."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/operation/withdraw/wire": {
            "post": {
                "tags": [
                    "013. Withdraw wire"
                ],
                "summary": "Create Withdraw Wire operation",
                "description": "This API call is used to create a new Withdraw by Wire operation.",
                "operationId": "40f328def077e1383a4eef89373eeab6",
                "parameters": [
                    {
                        "name": "api-client",
                        "in": "header",
                        "description": "API client token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "emB4HOVT6s70HCmp3NskxgmxvDG8UAoZcZ4x259jLC2aUwII49FVdP2wbObG"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "from_wallet",
                                    "amount",
                                    "to_wire_account",
                                    "wire_type",
                                    "provider_id"
                                ],
                                "properties": {
                                    "from_wallet": {
                                        "description": "Internal wallet id for withdraw operation.\r\n                                To get all wallets, make API call to /api/wallets endpoint",
                                        "type": "string",
                                        "example": "3asf4baf-al68-49f7-la36-86f3eed92947"
                                    },
                                    "amount": {
                                        "description": "Operation amount",
                                        "type": "number",
                                        "example": 0.5
                                    },
                                    "to_wire_account": {
                                        "description": "Clinet external wire account id for withdraw operation.\r\n                                 To get all wire accounts make API call to /api/accounts/wire endpoint\r\n                                 or to create a new account make API call to /api/account/wire endpoint",
                                        "type": "string",
                                        "example": "s4a8s4a7-4848-5262-s45d-296b1bd288e1"
                                    },
                                    "wire_type": {
                                        "description": "wire type is  WITHDRAW WIRE SEPA = 1; WITHDRAW WIRE SWIFT = 0",
                                        "type": "integer",
                                        "enum": [
                                            "0",
                                            "1"
                                        ],
                                        "example": "1"
                                    },
                                    "provider_id": {
                                        "description": "To get available providers, make API call to /api/providers/{currency}/{country}/{wireType} endpoint. Currency and country should be same as in wire account.",
                                        "type": "string",
                                        "example": "7msf4baf-al68-49f7-la36-83A3eed92947"
                                    },
                                    "twoFaToken": {
                                        "description": "This parameter is needed for 2FA verification. It is required, if the client's 2FA enabled. For get it, at first call /api/2fa/create endpoint.",
                                        "type": "string",
                                        "example": "JLfsSaXcjHwyHC3tejl3KAJxOWKXOIZIFQrelxFgfDj4loUYYkn4HtK2EvnL"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "If operation was created successfully",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "success": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Error messages",
                                            "properties": {
                                                "amount": {
                                                    "description": "The amount must be a number",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": {
                                            "amount": "The amount must be a number."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}